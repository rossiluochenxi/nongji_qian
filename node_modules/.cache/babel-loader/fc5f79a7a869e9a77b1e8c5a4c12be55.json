{"remainingRequest":"D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\@jiaminghi\\data-view\\lib\\components\\flylineChart\\src\\main.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\@jiaminghi\\data-view\\lib\\components\\flylineChart\\src\\main.vue","mtime":1713163063683},{"path":"D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\babel.config.js","mtime":1710675411407},{"path":"D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1710867555791},{"path":"D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":1710867556608},{"path":"D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1710867555791},{"path":"D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1710867531387}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["_index","require","_util","_index2","_autoResize","_interopRequireDefault","name","mixins","autoResize","props","config","type","Object","default","_default","dev","Boolean","data","id","uuid","ref","unique","Math","random","maskId","concat","maskCircleId","gradientId","gradient2Id","defaultConfig","centerPoint","points","lineWidth","orbitColor","flylineColor","k","curvature","flylineRadius","duration","relative","bgImgUrl","text","offset","color","fontSize","halo","show","radius","centerPointImg","width","height","url","pointsImg","mergedConfig","paths","lengths","times","texts","watch","calcData","methods","afterAutoResizeMixinInit","onResize","_this","_asyncToGenerator2","_regeneratorRuntime2","mark","_callee","mergeConfig","createFlylinePaths","calcLineLengths","calcTimes","calcTexts","wrap","_callee$","_context","prev","next","stop","deepMerge","deepClone","map","item","Array","position","getPath","_ref","_ref2","_ref3","_slicedToArray2","x","y","point","center","getControlPoint","controlPoint","_ref4","_ref5","_ref6","sx","sy","_ref7","ex","ey","getKLinePointByx","mx","my","distance","getPointDistance","targetLength","disDived","dx","dy","_ref8","_ref9","lx","ly","_this2","_callee2","$nextTick","$refs","_callee2$","_context2","foo","i","getTotalLength","_this$mergedConfig","randomExtend","apply","_toConsumableArray2","_ref10","consoleClickPos","_ref11","offsetX","offsetY","relativeX","toFixed","relativeY","console","warn"],"sources":["node_modules/@jiaminghi/data-view/lib/components/flylineChart/src/main.vue"],"sourcesContent":["<template>\n  <div\n    class=\"dv-flyline-chart\"\n    ref=\"dv-flyline-chart\"\n    :style=\"`background-image: url(${mergedConfig ? mergedConfig.bgImgUrl : ''})`\"\n    @click=\"consoleClickPos\"\n  >\n    <svg v-if=\"mergedConfig\" :width=\"width\" :height=\"height\">\n      <defs>\n        <radialGradient\n          :id=\"gradientId\"\n          cx=\"50%\" cy=\"50%\" r=\"50%\"\n        >\n          <stop\n            offset=\"0%\" stop-color=\"#fff\"\n            stop-opacity=\"1\"\n          />\n          <stop\n            offset=\"100%\" stop-color=\"#fff\"\n            stop-opacity=\"0\"\n          />\n        </radialGradient>\n\n        <radialGradient\n          :id=\"gradient2Id\"\n          cx=\"50%\" cy=\"50%\" r=\"50%\"\n        >\n          <stop\n            offset=\"0%\" stop-color=\"#fff\"\n            stop-opacity=\"0\"\n          />\n          <stop\n            offset=\"100%\" stop-color=\"#fff\"\n            stop-opacity=\"1\"\n          />\n        </radialGradient>\n\n        <circle\n          v-if=\"paths[0]\"\n          :id=\"`circle${paths[0].toString()}`\"\n          :cx=\"paths[0][2][0]\"\n          :cy=\"paths[0][2][1]\"\n        >\n          <animate\n            attributeName=\"r\"\n            :values=\"`1;${mergedConfig.halo.radius}`\"\n            :dur=\"mergedConfig.halo.duration / 10 + 's'\"\n            repeatCount=\"indefinite\"\n          />\n          <animate\n            attributeName=\"opacity\"\n            values=\"1;0\"\n            :dur=\"mergedConfig.halo.duration / 10 + 's'\"\n            repeatCount=\"indefinite\"\n          />\n        </circle>\n      </defs>\n\n      <image\n        v-if=\"paths[0]\"\n        :xlink:href=\"mergedConfig.centerPointImg.url\"\n        :width=\"mergedConfig.centerPointImg.width\"\n        :height=\"mergedConfig.centerPointImg.height\"\n        :x=\"paths[0][2][0] - mergedConfig.centerPointImg.width / 2\"\n        :y=\"paths[0][2][1] - mergedConfig.centerPointImg.height / 2\"\n      />\n\n      <mask :id=\"`maskhalo${paths[0].toString()}`\">\n        <use\n          v-if=\"paths[0]\"\n          :xlink:href=\"`#circle${paths[0].toString()}`\"\n          :fill=\"`url(#${gradient2Id})`\"\n        />\n      </mask>\n\n      <use\n        v-if=\"paths[0] && mergedConfig.halo.show\"\n        :xlink:href=\"`#circle${paths[0].toString()}`\"\n        :fill=\"mergedConfig.halo.color\"\n        :mask=\"`url(#maskhalo${paths[0].toString()})`\"\n      />\n\n      <g\n        v-for=\"(path, i) in paths\"\n        :key=\"i\"\n      >\n        <defs>\n          <path\n            :id=\"`path${path.toString()}`\"\n            :ref=\"`path${i}`\"\n            :d=\"`M${path[0].toString()} Q${path[1].toString()} ${path[2].toString()}`\"\n            fill=\"transparent\"\n          />\n        </defs>\n\n        <use\n          :xlink:href=\"`#path${path.toString()}`\"\n          :stroke-width=\"mergedConfig.lineWidth\"\n          :stroke=\"mergedConfig.orbitColor\"\n        />\n\n        <use\n          v-if=\"lengths[i]\"\n          :xlink:href=\"`#path${path.toString()}`\"\n          :stroke-width=\"mergedConfig.lineWidth\"\n          :stroke=\"mergedConfig.flylineColor\"\n          :mask=\"`url(#mask${unique}${path.toString()})`\"\n        >\n          <animate\n            attributeName=\"stroke-dasharray\"\n            :from=\"`0, ${lengths[i]}`\"\n            :to=\"`${lengths[i]}, 0`\"\n            :dur=\"times[i] || 0\"\n            repeatCount=\"indefinite\"\n          />\n        </use>\n\n        <mask :id=\"`mask${unique}${path.toString()}`\">\n          <circle cx=\"0\" cy=\"0\" :r=\"mergedConfig.flylineRadius\" :fill=\"`url(#${gradientId})`\">\n            <animateMotion\n              :dur=\"times[i] || 0\"\n              :path=\"`M${path[0].toString()} Q${path[1].toString()} ${path[2].toString()}`\"\n              rotate=\"auto\"\n              repeatCount=\"indefinite\"\n            />\n          </circle>\n        </mask>\n\n        <image\n          :xlink:href=\"mergedConfig.pointsImg.url\"\n          :width=\"mergedConfig.pointsImg.width\"\n          :height=\"mergedConfig.pointsImg.height\"\n          :x=\"path[0][0] - mergedConfig.pointsImg.width / 2\"\n          :y=\"path[0][1] - mergedConfig.pointsImg.height / 2\"\n        />\n\n        <text\n          :style=\"`fontSize:${mergedConfig.text.fontSize}px;`\"\n          :fill=\"mergedConfig.text.color\"\n          :x=\"path[0][0] + mergedConfig.text.offset[0]\"\n          :y=\"path[0][1] + mergedConfig.text.offset[1]\"\n        >\n          {{ texts[i] }}\n        </text>\n\n      </g>\n    </svg>\n  </div>\n</template>\n\n<script>\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nimport { randomExtend, getPointDistance, uuid } from '../../../util/index'\n\nimport autoResize from '../../../mixin/autoResize'\n\nexport default {\n  name: 'DvFlylineChart',\n  mixins: [autoResize],\n  props: {\n    config: {\n      type: Object,\n      default: () => ({})\n    },\n    dev: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    const id = uuid()\n    return {\n      ref: 'dv-flyline-chart',\n      unique: Math.random(),\n      maskId: `flyline-mask-id-${id}`,\n      maskCircleId: `mask-circle-id-${id}`,\n      gradientId: `gradient-id-${id}`,\n      gradient2Id: `gradient2-id-${id}`,\n\n      defaultConfig: {\n        /**\n         * @description Flyline chart center point\n         * @type {Array<Number>}\n         * @default centerPoint = [0, 0]\n         */\n        centerPoint: [0, 0],\n        /**\n         * @description Flyline start points\n         * @type {Array<Array<Number>>}\n         * @default points = []\n         * @example points = [[10, 10], [100, 100]]\n         */\n        points: [],\n        /**\n         * @description Flyline width\n         * @type {Number}\n         * @default lineWidth = 1\n         */\n        lineWidth: 1,\n        /**\n         * @description Orbit color\n         * @type {String}\n         * @default orbitColor = 'rgba(103, 224, 227, .2)'\n         */\n        orbitColor: 'rgba(103, 224, 227, .2)',\n        /**\n         * @description Flyline color\n         * @type {String}\n         * @default orbitColor = '#ffde93'\n         */\n        flylineColor: '#ffde93',\n        /**\n         * @description K value\n         * @type {Number}\n         * @default k = -0.5\n         * @example k = -1 ~ 1\n         */\n        k: -0.5,\n        /**\n         * @description Flyline curvature\n         * @type {Number}\n         * @default curvature = 5\n         */\n        curvature: 5,\n        /**\n         * @description Flyline radius\n         * @type {Number}\n         * @default flylineRadius = 100\n         */\n        flylineRadius: 100,\n        /**\n         * @description Flyline animation duration\n         * @type {Array<Number>}\n         * @default duration = [20, 30]\n         */\n        duration: [20, 30],\n        /**\n         * @description Relative points position\n         * @type {Boolean}\n         * @default relative = true\n         */\n        relative: true,\n        /**\n         * @description Back ground image url\n         * @type {String}\n         * @default bgImgUrl = ''\n         * @example bgImgUrl = './img/bg.jpg'\n         */\n        bgImgUrl: '',\n        /**\n         * @description Text configuration\n         * @type {Object}\n         */\n        text: {\n          /**\n           * @description Text offset\n           * @type {Array<Number>}\n           * @default offset = [0, 15]\n           */\n          offset: [0, 15],\n          /**\n           * @description Text color\n           * @type {String}\n           * @default color = '#ffdb5c'\n           */\n          color: '#ffdb5c',\n          /**\n           * @description Text font size\n           * @type {Number}\n           * @default fontSize = 12\n           */\n          fontSize: 12\n        },\n        /**\n         * @description Halo configuration\n         * @type {Object}\n         */\n        halo: {\n          /**\n           * @description Weather to show halo\n           * @type {Boolean}\n           * @default show = true\n           * @example show = true | false\n           */\n          show: true,\n          /**\n           * @description Halo animation duration (10 = 1s)\n           * @type {Number}\n           * @default duration = 30\n           */\n          duration: 30,\n          /**\n           * @description Halo color\n           * @type {String}\n           * @default color = '#fb7293'\n           */\n          color: '#fb7293',\n          /**\n           * @description Halo max radius\n           * @type {Number}\n           * @default radius = 120\n           */\n          radius: 120\n        },\n        /**\n         * @description Center point img configuration\n         * @type {Object}\n         */\n        centerPointImg: {\n          /**\n           * @description Center point img width\n           * @type {Number}\n           * @default width = 40\n           */\n          width: 40,\n          /**\n           * @description Center point img height\n           * @type {Number}\n           * @default height = 40\n           */\n          height: 40,\n          /**\n           * @description Center point img url\n           * @type {String}\n           * @default url = ''\n           */\n          url: ''\n        },\n        /**\n         * @description Points img configuration\n         * @type {Object}\n         * @default radius = 120\n         */\n        pointsImg: {\n          /**\n           * @description Points img width\n           * @type {Number}\n           * @default width = 15\n           */\n          width: 15,\n          /**\n           * @description Points img height\n           * @type {Number}\n           * @default height = 15\n           */\n          height: 15,\n          /**\n           * @description Points img url\n           * @type {String}\n           * @default url = ''\n           */\n          url: ''\n        }\n      },\n\n      mergedConfig: null,\n\n      paths: [],\n      lengths: [],\n      times: [],\n      texts: []\n    }\n  },\n  watch: {\n    config () {\n      const { calcData } = this\n\n      calcData()\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit () {\n      const { calcData } = this\n\n      calcData()\n    },\n    onResize () {\n      const { calcData } = this\n\n      calcData()\n    },\n    async calcData () {\n      const { mergeConfig, createFlylinePaths, calcLineLengths } = this\n\n      mergeConfig()\n\n      createFlylinePaths()\n\n      await calcLineLengths()\n\n      const { calcTimes, calcTexts } = this\n\n      calcTimes()\n\n      calcTexts()\n    },\n    mergeConfig () {\n      let { config, defaultConfig } = this\n\n      const mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\n\n      const { points } = mergedConfig\n\n      mergedConfig.points = points.map(item => {\n        if (item instanceof Array) {\n          return { position: item, text: '' }\n        }\n\n        return item\n      })\n\n      this.mergedConfig = mergedConfig\n    },\n    createFlylinePaths () {\n      const { getPath, mergedConfig, width, height } = this\n\n      let { centerPoint, points, relative } = mergedConfig\n\n      points = points.map(({ position }) => position)\n\n      if (relative) {\n        centerPoint = [width * centerPoint[0], height * centerPoint[1]]\n        points = points.map(([x, y]) => [width * x, height * y])\n      }\n\n      this.paths = points.map(point => getPath(centerPoint, point))\n    },\n    getPath (center, point) {\n      const { getControlPoint } = this\n\n      const controlPoint = getControlPoint(center, point)\n\n      return [point, controlPoint, center]\n    },\n    getControlPoint ([sx, sy], [ex, ey]) {\n      const { getKLinePointByx, mergedConfig } = this\n\n      const { curvature, k } = mergedConfig\n\n      const [mx, my] = [(sx + ex) / 2, (sy + ey) / 2]\n\n      const distance = getPointDistance([sx, sy], [ex, ey])\n\n      const targetLength = distance / curvature\n      const disDived = targetLength / 2\n\n      let [dx, dy] = [mx, my]\n\n      do {\n        dx += disDived\n        dy = getKLinePointByx(k, [mx, my], dx)[1]\n      } while (getPointDistance([mx, my], [dx, dy]) < targetLength)\n\n      return [dx, dy]\n    },\n    getKLinePointByx (k, [lx, ly], x) {\n      const y = ly - k * lx + k * x\n\n      return [x, y]\n    },\n    async calcLineLengths () {\n      const { $nextTick, paths, $refs } = this\n\n      await $nextTick()\n\n      this.lengths = paths.map((foo, i) => $refs[`path${i}`][0].getTotalLength())\n    },\n    calcTimes () {\n      const { duration, points } = this.mergedConfig\n\n      this.times = points.map(foo => randomExtend(...duration) / 10)\n    },\n    calcTexts () {\n      const { points } = this.mergedConfig\n\n      this.texts = points.map(({ text }) => text)\n    },\n    consoleClickPos ({ offsetX, offsetY }) {\n      const { width, height, dev } = this\n\n      if (!dev) return\n\n      const relativeX = (offsetX / width).toFixed(2)\n      const relativeY = (offsetY / height).toFixed(2)\n\n      console.warn(`dv-flyline-chart DEV: \\n Click Position is [${offsetX}, ${offsetY}] \\n Relative Position is [${relativeX}, ${relativeY}]`)\n    }\n  }\n}\n</script>"],"mappings":";;;;;;;;;;;;;;AAuJA,IAAAA,MAAA,GAAAC,OAAA;AAEA,IAAAC,KAAA,GAAAD,OAAA;AAEA,IAAAE,OAAA,GAAAF,OAAA;AAEA,IAAAG,WAAA,GAAAC,sBAAA,CAAAJ,OAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAEA;EACAK,IAAA;EACAC,MAAA,GAAAC,mBAAA;EACAC,KAAA;IACAC,MAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA,WAAAC,SAAA;QAAA;MAAA;IACA;IACAC,GAAA;MACAJ,IAAA,EAAAK,OAAA;MACAH,OAAA;IACA;EACA;EACAI,IAAA,WAAAA,KAAA;IACA,IAAAC,EAAA,OAAAC,YAAA;IACA;MACAC,GAAA;MACAC,MAAA,EAAAC,IAAA,CAAAC,MAAA;MACAC,MAAA,qBAAAC,MAAA,CAAAP,EAAA;MACAQ,YAAA,oBAAAD,MAAA,CAAAP,EAAA;MACAS,UAAA,iBAAAF,MAAA,CAAAP,EAAA;MACAU,WAAA,kBAAAH,MAAA,CAAAP,EAAA;MAEAW,aAAA;QACA;AACA;AACA;AACA;AACA;QACAC,WAAA;QACA;AACA;AACA;AACA;AACA;AACA;QACAC,MAAA;QACA;AACA;AACA;AACA;AACA;QACAC,SAAA;QACA;AACA;AACA;AACA;AACA;QACAC,UAAA;QACA;AACA;AACA;AACA;AACA;QACAC,YAAA;QACA;AACA;AACA;AACA;AACA;AACA;QACAC,CAAA;QACA;AACA;AACA;AACA;AACA;QACAC,SAAA;QACA;AACA;AACA;AACA;AACA;QACAC,aAAA;QACA;AACA;AACA;AACA;AACA;QACAC,QAAA;QACA;AACA;AACA;AACA;AACA;QACAC,QAAA;QACA;AACA;AACA;AACA;AACA;AACA;QACAC,QAAA;QACA;AACA;AACA;AACA;QACAC,IAAA;UACA;AACA;AACA;AACA;AACA;UACAC,MAAA;UACA;AACA;AACA;AACA;AACA;UACAC,KAAA;UACA;AACA;AACA;AACA;AACA;UACAC,QAAA;QACA;QACA;AACA;AACA;AACA;QACAC,IAAA;UACA;AACA;AACA;AACA;AACA;AACA;UACAC,IAAA;UACA;AACA;AACA;AACA;AACA;UACAR,QAAA;UACA;AACA;AACA;AACA;AACA;UACAK,KAAA;UACA;AACA;AACA;AACA;AACA;UACAI,MAAA;QACA;QACA;AACA;AACA;AACA;QACAC,cAAA;UACA;AACA;AACA;AACA;AACA;UACAC,KAAA;UACA;AACA;AACA;AACA;AACA;UACAC,MAAA;UACA;AACA;AACA;AACA;AACA;UACAC,GAAA;QACA;QACA;AACA;AACA;AACA;AACA;QACAC,SAAA;UACA;AACA;AACA;AACA;AACA;UACAH,KAAA;UACA;AACA;AACA;AACA;AACA;UACAC,MAAA;UACA;AACA;AACA;AACA;AACA;UACAC,GAAA;QACA;MACA;MAEAE,YAAA;MAEAC,KAAA;MACAC,OAAA;MACAC,KAAA;MACAC,KAAA;IACA;EACA;EACAC,KAAA;IACAhD,MAAA,WAAAA,OAAA;MACA,IAAAiD,QAAA,QAAAA,QAAA;MAEAA,QAAA;IACA;EACA;EACAC,OAAA;IACAC,wBAAA,WAAAA,yBAAA;MACA,IAAAF,QAAA,QAAAA,QAAA;MAEAA,QAAA;IACA;IACAG,QAAA,WAAAA,SAAA;MACA,IAAAH,QAAA,QAAAA,QAAA;MAEAA,QAAA;IACA;IACAA,QAAA,WAAAA,SAAA;MAAA,IAAAI,KAAA;MAAA,WAAAC,kBAAA,CAAAnD,OAAA,oBAAAoD,oBAAA,CAAApD,OAAA,IAAAqD,IAAA,UAAAC,QAAA;QAAA,IAAAC,WAAA,EAAAC,kBAAA,EAAAC,eAAA,EAAAC,SAAA,EAAAC,SAAA;QAAA,WAAAP,oBAAA,CAAApD,OAAA,IAAA4D,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cACAT,WAAA,GAAAL,KAAA,CAAAK,WAAA,EAAAC,kBAAA,GAAAN,KAAA,CAAAM,kBAAA,EAAAC,eA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","ignoreList":[]}]}