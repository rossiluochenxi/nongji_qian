{"remainingRequest":"D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\@jiaminghi\\data-view\\lib\\components\\scrollRankingBoard\\src\\main.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\@jiaminghi\\data-view\\lib\\components\\scrollRankingBoard\\src\\main.vue","mtime":1713163063692},{"path":"D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\babel.config.js","mtime":1710675411407},{"path":"D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1710867555791},{"path":"D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":1710867556608},{"path":"D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1710867555791},{"path":"D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1710867531387}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCJEOi90YW9zZXJ2ZXIvcGxhdGZvcm0vdGFveXVhbl9xaWFuL3J1b3lpLXVpL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdC5qcyIpLmRlZmF1bHQ7Ck9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwOwp2YXIgX3JlZ2VuZXJhdG9yUnVudGltZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIkQ6L3Rhb3NlcnZlci9wbGF0Zm9ybS90YW95dWFuX3FpYW4vcnVveWktdWkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvcmVnZW5lcmF0b3JSdW50aW1lLmpzIikpOwp2YXIgX2FzeW5jVG9HZW5lcmF0b3IyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJEOi90YW9zZXJ2ZXIvcGxhdGZvcm0vdGFveXVhbl9xaWFuL3J1b3lpLXVpL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2FzeW5jVG9HZW5lcmF0b3IuanMiKSk7CnZhciBfb2JqZWN0U3ByZWFkMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiRDovdGFvc2VydmVyL3BsYXRmb3JtL3Rhb3l1YW5fcWlhbi9ydW95aS11aS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9vYmplY3RTcHJlYWQyLmpzIikpOwp2YXIgX3RvQ29uc3VtYWJsZUFycmF5MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiRDovdGFvc2VydmVyL3BsYXRmb3JtL3Rhb3l1YW5fcWlhbi9ydW95aS11aS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy90b0NvbnN1bWFibGVBcnJheS5qcyIpKTsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyIpOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsbC5qcyIpOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5wdXNoLmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZS5qcyIpOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29ydC5qcyIpOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlLmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIik7CnZhciBfYXV0b1Jlc2l6ZSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiLi4vLi4vLi4vbWl4aW4vYXV0b1Jlc2l6ZSIpKTsKdmFyIF9pbmRleCA9IHJlcXVpcmUoIkBqaWFtaW5naGkvY2hhcnRzL2xpYi91dGlsL2luZGV4Iik7CnZhciBfdXRpbCA9IHJlcXVpcmUoIkBqaWFtaW5naGkvYy1yZW5kZXIvbGliL3BsdWdpbi91dGlsIik7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCnZhciBfZGVmYXVsdDIgPSBleHBvcnRzLmRlZmF1bHQgPSB7CiAgbmFtZTogJ0R2U2Nyb2xsUmFua2luZ0JvYXJkJywKICBtaXhpbnM6IFtfYXV0b1Jlc2l6ZS5kZWZhdWx0XSwKICBwcm9wczogewogICAgY29uZmlnOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIHt9OwogICAgICB9CiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcmVmOiAnc2Nyb2xsLXJhbmtpbmctYm9hcmQnLAogICAgICBkZWZhdWx0Q29uZmlnOiB7CiAgICAgICAgLyoqCiAgICAgICAgICogQGRlc2NyaXB0aW9uIEJvYXJkIGRhdGEKICAgICAgICAgKiBAdHlwZSB7QXJyYXk8T2JqZWN0Pn0KICAgICAgICAgKiBAZGVmYXVsdCBkYXRhID0gW10KICAgICAgICAgKi8KICAgICAgICBkYXRhOiBbXSwKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb24gUm93IG51bQogICAgICAgICAqIEB0eXBlIHtOdW1iZXJ9CiAgICAgICAgICogQGRlZmF1bHQgcm93TnVtID0gNQogICAgICAgICAqLwogICAgICAgIHJvd051bTogNSwKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb24gU2Nyb2xsIHdhaXQgdGltZQogICAgICAgICAqIEB0eXBlIHtOdW1iZXJ9CiAgICAgICAgICogQGRlZmF1bHQgd2FpdFRpbWUgPSAyMDAwCiAgICAgICAgICovCiAgICAgICAgd2FpdFRpbWU6IDIwMDAsCiAgICAgICAgLyoqCiAgICAgICAgICogQGRlc2NyaXB0aW9uIENhcm91c2VsIHR5cGUKICAgICAgICAgKiBAdHlwZSB7U3RyaW5nfQogICAgICAgICAqIEBkZWZhdWx0IGNhcm91c2VsID0gJ3NpbmdsZScKICAgICAgICAgKiBAZXhhbXBsZSBjYXJvdXNlbCA9ICdzaW5nbGUnIHwgJ3BhZ2UnCiAgICAgICAgICovCiAgICAgICAgY2Fyb3VzZWw6ICdzaW5nbGUnLAogICAgICAgIC8qKgogICAgICAgICAqIEBkZXNjcmlwdGlvbiBWYWx1ZSB1bml0CiAgICAgICAgICogQHR5cGUge1N0cmluZ30KICAgICAgICAgKiBAZGVmYXVsdCB1bml0ID0gJycKICAgICAgICAgKiBAZXhhbXBsZSB1bml0ID0gJ3RvbicKICAgICAgICAgKi8KICAgICAgICB1bml0OiAnJywKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb24gQXV0byBzb3J0IGJ5IHZhbHVlCiAgICAgICAgICogQHR5cGUge0Jvb2xlYW59CiAgICAgICAgICogQGRlZmF1bHQgc29ydCA9IHRydWUKICAgICAgICAgKi8KICAgICAgICBzb3J0OiB0cnVlLAogICAgICAgIC8qKgogICAgICAgICAqIEBkZXNjcmlwdGlvbiBWYWx1ZSBmb3JtYXR0ZXIKICAgICAgICAgKiBAdHlwZSB7RnVuY3Rpb259CiAgICAgICAgICogQGRlZmF1bHQgdmFsdWVGb3JtYXR0ZXIgPSBudWxsCiAgICAgICAgICovCiAgICAgICAgdmFsdWVGb3JtYXR0ZXI6IG51bGwKICAgICAgfSwKICAgICAgbWVyZ2VkQ29uZmlnOiBudWxsLAogICAgICByb3dzRGF0YTogW10sCiAgICAgIHJvd3M6IFtdLAogICAgICBoZWlnaHRzOiBbXSwKICAgICAgYW5pbWF0aW9uSW5kZXg6IDAsCiAgICAgIGFuaW1hdGlvbkhhbmRsZXI6ICcnLAogICAgICB1cGRhdGVyOiAwCiAgICB9OwogIH0sCiAgd2F0Y2g6IHsKICAgIGNvbmZpZzogZnVuY3Rpb24gY29uZmlnKCkgewogICAgICB2YXIgc3RvcEFuaW1hdGlvbiA9IHRoaXMuc3RvcEFuaW1hdGlvbiwKICAgICAgICBjYWxjRGF0YSA9IHRoaXMuY2FsY0RhdGE7CiAgICAgIHN0b3BBbmltYXRpb24oKTsKICAgICAgY2FsY0RhdGEoKTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGFmdGVyQXV0b1Jlc2l6ZU1peGluSW5pdDogZnVuY3Rpb24gYWZ0ZXJBdXRvUmVzaXplTWl4aW5Jbml0KCkgewogICAgICB2YXIgY2FsY0RhdGEgPSB0aGlzLmNhbGNEYXRhOwogICAgICBjYWxjRGF0YSgpOwogICAgfSwKICAgIG9uUmVzaXplOiBmdW5jdGlvbiBvblJlc2l6ZSgpIHsKICAgICAgdmFyIG1lcmdlZENvbmZpZyA9IHRoaXMubWVyZ2VkQ29uZmlnLAogICAgICAgIGNhbGNIZWlnaHRzID0gdGhpcy5jYWxjSGVpZ2h0czsKICAgICAgaWYgKCFtZXJnZWRDb25maWcpIHJldHVybjsKICAgICAgY2FsY0hlaWdodHModHJ1ZSk7CiAgICB9LAogICAgY2FsY0RhdGE6IGZ1bmN0aW9uIGNhbGNEYXRhKCkgewogICAgICB2YXIgbWVyZ2VDb25maWcgPSB0aGlzLm1lcmdlQ29uZmlnLAogICAgICAgIGNhbGNSb3dzRGF0YSA9IHRoaXMuY2FsY1Jvd3NEYXRhOwogICAgICBtZXJnZUNvbmZpZygpOwogICAgICBjYWxjUm93c0RhdGEoKTsKICAgICAgdmFyIGNhbGNIZWlnaHRzID0gdGhpcy5jYWxjSGVpZ2h0czsKICAgICAgY2FsY0hlaWdodHMoKTsKICAgICAgdmFyIGFuaW1hdGlvbiA9IHRoaXMuYW5pbWF0aW9uOwogICAgICBhbmltYXRpb24odHJ1ZSk7CiAgICB9LAogICAgbWVyZ2VDb25maWc6IGZ1bmN0aW9uIG1lcmdlQ29uZmlnKCkgewogICAgICB2YXIgY29uZmlnID0gdGhpcy5jb25maWcsCiAgICAgICAgZGVmYXVsdENvbmZpZyA9IHRoaXMuZGVmYXVsdENvbmZpZzsKICAgICAgdGhpcy5tZXJnZWRDb25maWcgPSAoMCwgX2luZGV4LmRlZXBNZXJnZSkoKDAsIF91dGlsLmRlZXBDbG9uZSkoZGVmYXVsdENvbmZpZywgdHJ1ZSksIGNvbmZpZyB8fCB7fSk7CiAgICB9LAogICAgY2FsY1Jvd3NEYXRhOiBmdW5jdGlvbiBjYWxjUm93c0RhdGEoKSB7CiAgICAgIHZhciBfdGhpcyRtZXJnZWRDb25maWcgPSB0aGlzLm1lcmdlZENvbmZpZywKICAgICAgICBkYXRhID0gX3RoaXMkbWVyZ2VkQ29uZmlnLmRhdGEsCiAgICAgICAgcm93TnVtID0gX3RoaXMkbWVyZ2VkQ29uZmlnLnJvd051bSwKICAgICAgICBzb3J0ID0gX3RoaXMkbWVyZ2VkQ29uZmlnLnNvcnQ7CiAgICAgIHNvcnQgJiYgZGF0YS5zb3J0KGZ1bmN0aW9uIChfcmVmLCBfcmVmMikgewogICAgICAgIHZhciBhID0gX3JlZi52YWx1ZTsKICAgICAgICB2YXIgYiA9IF9yZWYyLnZhbHVlOwogICAgICAgIGlmIChhID4gYikgcmV0dXJuIC0xOwogICAgICAgIGlmIChhIDwgYikgcmV0dXJuIDE7CiAgICAgICAgaWYgKGEgPT09IGIpIHJldHVybiAwOwogICAgICB9KTsKICAgICAgdmFyIHZhbHVlID0gZGF0YS5tYXAoZnVuY3Rpb24gKF9yZWYzKSB7CiAgICAgICAgdmFyIHZhbHVlID0gX3JlZjMudmFsdWU7CiAgICAgICAgcmV0dXJuIHZhbHVlOwogICAgICB9KTsKICAgICAgdmFyIG1pbiA9IE1hdGgubWluLmFwcGx5KE1hdGgsICgwLCBfdG9Db25zdW1hYmxlQXJyYXkyLmRlZmF1bHQpKHZhbHVlKSkgfHwgMDsKCiAgICAgIC8vIGFicyBvZiBtaW4KICAgICAgdmFyIG1pbkFicyA9IE1hdGguYWJzKG1pbik7CiAgICAgIHZhciBtYXggPSBNYXRoLm1heC5hcHBseShNYXRoLCAoMCwgX3RvQ29uc3VtYWJsZUFycmF5Mi5kZWZhdWx0KSh2YWx1ZSkpIHx8IDA7CgogICAgICAvLyBhYnMgb2YgbWF4CiAgICAgIHZhciBtYXhBYnMgPSBNYXRoLmFicyhtYXgpOwogICAgICB2YXIgdG90YWwgPSBtYXggKyBtaW5BYnM7CiAgICAgIGRhdGEgPSBkYXRhLm1hcChmdW5jdGlvbiAocm93LCBpKSB7CiAgICAgICAgcmV0dXJuICgwLCBfb2JqZWN0U3ByZWFkMi5kZWZhdWx0KSgoMCwgX29iamVjdFNwcmVhZDIuZGVmYXVsdCkoe30sIHJvdyksIHt9LCB7CiAgICAgICAgICByYW5raW5nOiBpICsgMSwKICAgICAgICAgIHBlcmNlbnQ6IChyb3cudmFsdWUgKyBtaW5BYnMpIC8gdG90YWwgKiAxMDAKICAgICAgICB9KTsKICAgICAgfSk7CiAgICAgIHZhciByb3dMZW5ndGggPSBkYXRhLmxlbmd0aDsKICAgICAgaWYgKHJvd0xlbmd0aCA+IHJvd051bSAmJiByb3dMZW5ndGggPCAyICogcm93TnVtKSB7CiAgICAgICAgZGF0YSA9IFtdLmNvbmNhdCgoMCwgX3RvQ29uc3VtYWJsZUFycmF5Mi5kZWZhdWx0KShkYXRhKSwgKDAsIF90b0NvbnN1bWFibGVBcnJheTIuZGVmYXVsdCkoZGF0YSkpOwogICAgICB9CiAgICAgIGRhdGEgPSBkYXRhLm1hcChmdW5jdGlvbiAoZCwgaSkgewogICAgICAgIHJldHVybiAoMCwgX29iamVjdFNwcmVhZDIuZGVmYXVsdCkoKDAsIF9vYmplY3RTcHJlYWQyLmRlZmF1bHQpKHt9LCBkKSwge30sIHsKICAgICAgICAgIHNjcm9sbDogaQogICAgICAgIH0pOwogICAgICB9KTsKICAgICAgdGhpcy5yb3dzRGF0YSA9IGRhdGE7CiAgICAgIHRoaXMucm93cyA9IGRhdGE7CiAgICB9LAogICAgY2FsY0hlaWdodHM6IGZ1bmN0aW9uIGNhbGNIZWlnaHRzKCkgewogICAgICB2YXIgb25yZXNpemUgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IGZhbHNlOwogICAgICB2YXIgaGVpZ2h0ID0gdGhpcy5oZWlnaHQsCiAgICAgICAgbWVyZ2VkQ29uZmlnID0gdGhpcy5tZXJnZWRDb25maWc7CiAgICAgIHZhciByb3dOdW0gPSBtZXJnZWRDb25maWcucm93TnVtLAogICAgICAgIGRhdGEgPSBtZXJnZWRDb25maWcuZGF0YTsKICAgICAgdmFyIGF2Z0hlaWdodCA9IGhlaWdodCAvIHJvd051bTsKICAgICAgdGhpcy5hdmdIZWlnaHQgPSBhdmdIZWlnaHQ7CiAgICAgIGlmICghb25yZXNpemUpIHRoaXMuaGVpZ2h0cyA9IG5ldyBBcnJheShkYXRhLmxlbmd0aCkuZmlsbChhdmdIZWlnaHQpOwogICAgfSwKICAgIGFuaW1hdGlvbjogZnVuY3Rpb24gYW5pbWF0aW9uKCkgewogICAgICB2YXIgX2FyZ3VtZW50cyA9IGFyZ3VtZW50cywKICAgICAgICBfdGhpcyA9IHRoaXM7CiAgICAgIHJldHVybiAoMCwgX2FzeW5jVG9HZW5lcmF0b3IyLmRlZmF1bHQpKCAvKiNfX1BVUkVfXyovKDAsIF9yZWdlbmVyYXRvclJ1bnRpbWUyLmRlZmF1bHQpKCkubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBfdGhpcyRoZWlnaHRzOwogICAgICAgIHZhciBzdGFydCwgYXZnSGVpZ2h0LCBhbmltYXRpb25JbmRleCwgbWVyZ2VkQ29uZmlnLCByb3dzRGF0YSwgYW5pbWF0aW9uLCB1cGRhdGVyLCB3YWl0VGltZSwgY2Fyb3VzZWwsIHJvd051bSwgcm93TGVuZ3RoLCBhbmltYXRpb25OdW0sIHJvd3MsIGJhY2s7CiAgICAgICAgcmV0dXJuICgwLCBfcmVnZW5lcmF0b3JSdW50aW1lMi5kZWZhdWx0KSgpLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBzdGFydCA9IF9hcmd1bWVudHMubGVuZ3RoID4gMCAmJiBfYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBfYXJndW1lbnRzWzBdIDogZmFsc2U7CiAgICAgICAgICAgICAgYXZnSGVpZ2h0ID0gX3RoaXMuYXZnSGVpZ2h0LCBhbmltYXRpb25JbmRleCA9IF90aGlzLmFuaW1hdGlvbkluZGV4LCBtZXJnZWRDb25maWcgPSBfdGhpcy5tZXJnZWRDb25maWcsIHJvd3NEYXRhID0gX3RoaXMucm93c0RhdGEsIGFuaW1hdGlvbiA9IF90aGlzLmFuaW1hdGlvbiwgdXBkYXRlciA9IF90aGlzLnVwZGF0ZXI7CiAgICAgICAgICAgICAgd2FpdFRpbWUgPSBtZXJnZWRDb25maWcud2FpdFRpbWUsIGNhcm91c2VsID0gbWVyZ2VkQ29uZmlnLmNhcm91c2VsLCByb3dOdW0gPSBtZXJnZWRDb25maWcucm93TnVtOwogICAgICAgICAgICAgIHJvd0xlbmd0aCA9IHJvd3NEYXRhLmxlbmd0aDsKICAgICAgICAgICAgICBpZiAoIShyb3dOdW0gPj0gcm93TGVuZ3RoKSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDY7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIik7CiAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICBpZiAoIXN0YXJ0KSB7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTE7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDk7CiAgICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gc2V0VGltZW91dChyZXNvbHZlLCB3YWl0VGltZSk7CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICBpZiAoISh1cGRhdGVyICE9PSBfdGhpcy51cGRhdGVyKSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDExOwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIpOwogICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgIGFuaW1hdGlvbk51bSA9IGNhcm91c2VsID09PSAnc2luZ2xlJyA/IDEgOiByb3dOdW07CiAgICAgICAgICAgICAgcm93cyA9IHJvd3NEYXRhLnNsaWNlKGFuaW1hdGlvbkluZGV4KTsKICAgICAgICAgICAgICByb3dzLnB1c2guYXBwbHkocm93cywgKDAsIF90b0NvbnN1bWFibGVBcnJheTIuZGVmYXVsdCkocm93c0RhdGEuc2xpY2UoMCwgYW5pbWF0aW9uSW5kZXgpKSk7CiAgICAgICAgICAgICAgX3RoaXMucm93cyA9IHJvd3Muc2xpY2UoMCwgcm93TnVtICsgMSk7CiAgICAgICAgICAgICAgX3RoaXMuaGVpZ2h0cyA9IG5ldyBBcnJheShyb3dMZW5ndGgpLmZpbGwoYXZnSGVpZ2h0KTsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTg7CiAgICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gc2V0VGltZW91dChyZXNvbHZlLCAzMDApOwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICBjYXNlIDE4OgogICAgICAgICAgICAgIGlmICghKHVwZGF0ZXIgIT09IF90aGlzLnVwZGF0ZXIpKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjA7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIik7CiAgICAgICAgICAgIGNhc2UgMjA6CiAgICAgICAgICAgICAgKF90aGlzJGhlaWdodHMgPSBfdGhpcy5oZWlnaHRzKS5zcGxpY2UuYXBwbHkoX3RoaXMkaGVpZ2h0cywgWzAsIGFuaW1hdGlvbk51bV0uY29uY2F0KCgwLCBfdG9Db25zdW1hYmxlQXJyYXkyLmRlZmF1bHQpKG5ldyBBcnJheShhbmltYXRpb25OdW0pLmZpbGwoMCkpKSk7CiAgICAgICAgICAgICAgYW5pbWF0aW9uSW5kZXggKz0gYW5pbWF0aW9uTnVtOwogICAgICAgICAgICAgIGJhY2sgPSBhbmltYXRpb25JbmRleCAtIHJvd0xlbmd0aDsKICAgICAgICAgICAgICBpZiAoYmFjayA+PSAwKSBhbmltYXRpb25JbmRleCA9IGJhY2s7CiAgICAgICAgICAgICAgX3RoaXMuYW5pbWF0aW9uSW5kZXggPSBhbmltYXRpb25JbmRleDsKICAgICAgICAgICAgICBfdGhpcy5hbmltYXRpb25IYW5kbGVyID0gc2V0VGltZW91dChhbmltYXRpb24sIHdhaXRUaW1lIC0gMzAwKTsKICAgICAgICAgICAgY2FzZSAyNjoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBzdG9wQW5pbWF0aW9uOiBmdW5jdGlvbiBzdG9wQW5pbWF0aW9uKCkgewogICAgICB2YXIgYW5pbWF0aW9uSGFuZGxlciA9IHRoaXMuYW5pbWF0aW9uSGFuZGxlciwKICAgICAgICB1cGRhdGVyID0gdGhpcy51cGRhdGVyOwogICAgICB0aGlzLnVwZGF0ZXIgPSAodXBkYXRlciArIDEpICUgOTk5OTk5OwogICAgICBpZiAoIWFuaW1hdGlvbkhhbmRsZXIpIHJldHVybjsKICAgICAgY2xlYXJUaW1lb3V0KGFuaW1hdGlvbkhhbmRsZXIpOwogICAgfQogIH0sCiAgZGVzdHJveWVkOiBmdW5jdGlvbiBkZXN0cm95ZWQoKSB7CiAgICB2YXIgc3RvcEFuaW1hdGlvbiA9IHRoaXMuc3RvcEFuaW1hdGlvbjsKICAgIHN0b3BBbmltYXRpb24oKTsKICB9Cn07"},{"version":3,"names":["_autoResize","_interopRequireDefault","require","_index","_util","name","mixins","autoResize","props","config","type","Object","default","_default","data","ref","defaultConfig","rowNum","waitTime","carousel","unit","sort","valueFormatter","mergedConfig","rowsData","rows","heights","animationIndex","animationHandler","updater","watch","stopAnimation","calcData","methods","afterAutoResizeMixinInit","onResize","calcHeights","mergeConfig","calcRowsData","animation","deepMerge","deepClone","_this$mergedConfig","_ref","_ref2","a","value","b","map","_ref3","min","Math","apply","_toConsumableArray2","minAbs","abs","max","maxAbs","total","row","i","_objectSpread2","ranking","percent","rowLength","length","concat","d","scroll","onresize","arguments","undefined","height","avgHeight","Array","fill","_arguments","_this","_asyncToGenerator2","_regeneratorRuntime2","mark","_callee","_this$heights","start","animationNum","back","wrap","_callee$","_context","prev","next","abrupt","Promise","resolve","setTimeout","slice","push","splice","stop","clearTimeout","destroyed"],"sources":["node_modules/@jiaminghi/data-view/lib/components/scrollRankingBoard/src/main.vue"],"sourcesContent":["<template>\n  <div class=\"dv-scroll-ranking-board\" :ref=\"ref\">\n    <div\n      class=\"row-item\"\n      v-for=\"(item, i) in rows\"\n      :key=\"item.toString() + item.scroll\"\n      :style=\"`height: ${heights[i]}px;`\"\n    >\n      <div class=\"ranking-info\">\n        <div class=\"rank\">No.{{ item.ranking }}</div>\n        <div class=\"info-name\" v-html=\"item.name\" />\n        <div class=\"ranking-value\">{{ mergedConfig.valueFormatter ? mergedConfig.valueFormatter(item) : item.value + mergedConfig.unit }}</div>\n      </div>\n\n      <div class=\"ranking-column\">\n        <div\n          class=\"inside-column\"\n          :style=\"`width: ${item.percent}%;`\"\n        >\n          <div class=\"shine\" />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvScrollRankingBoard',\n  mixins: [autoResize],\n  props: {\n    config: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data () {\n    return {\n      ref: 'scroll-ranking-board',\n\n      defaultConfig: {\n        /**\n         * @description Board data\n         * @type {Array<Object>}\n         * @default data = []\n         */\n        data: [],\n        /**\n         * @description Row num\n         * @type {Number}\n         * @default rowNum = 5\n         */\n        rowNum: 5,\n        /**\n         * @description Scroll wait time\n         * @type {Number}\n         * @default waitTime = 2000\n         */\n        waitTime: 2000,\n        /**\n         * @description Carousel type\n         * @type {String}\n         * @default carousel = 'single'\n         * @example carousel = 'single' | 'page'\n         */\n        carousel: 'single',\n        /**\n         * @description Value unit\n         * @type {String}\n         * @default unit = ''\n         * @example unit = 'ton'\n         */\n        unit: '',\n        /**\n         * @description Auto sort by value\n         * @type {Boolean}\n         * @default sort = true\n         */\n        sort: true,\n        /**\n         * @description Value formatter\n         * @type {Function}\n         * @default valueFormatter = null\n         */\n        valueFormatter: null\n      },\n\n      mergedConfig: null,\n\n      rowsData: [],\n\n      rows: [],\n\n      heights: [],\n\n      animationIndex: 0,\n\n      animationHandler: '',\n\n      updater: 0\n    }\n  },\n  watch: {\n    config () {\n      const { stopAnimation, calcData } = this\n\n      stopAnimation()\n\n      calcData()\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit () {\n      const { calcData } = this\n\n      calcData()\n    },\n    onResize () {\n      const { mergedConfig, calcHeights } = this\n\n      if (!mergedConfig) return\n\n      calcHeights(true)\n    },\n    calcData () {\n      const { mergeConfig, calcRowsData } = this\n\n      mergeConfig()\n\n      calcRowsData()\n\n      const { calcHeights } = this\n\n      calcHeights()\n\n      const { animation } = this\n\n      animation(true)\n    },\n    mergeConfig () {\n      let { config, defaultConfig } = this\n\n      this.mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\n    },\n    calcRowsData () {\n      let { data, rowNum, sort } = this.mergedConfig\n\n      sort && data.sort(({ value: a }, { value: b }) => {\n        if (a > b) return -1\n        if (a < b) return 1\n        if (a === b) return 0\n      })\n\n      const value = data.map(({ value }) => value)\n      \n      const min = Math.min(...value) || 0\n\n      // abs of min\n      const minAbs = Math.abs(min)\n\n      const max = Math.max(...value) || 0\n\n      // abs of max\n      const maxAbs = Math.abs(max)\n\n      const total = max + minAbs\n\n      data = data.map((row, i) => ({ ...row, ranking: i + 1, percent: (row.value + minAbs) / total * 100 }))\n\n      const rowLength = data.length\n\n      if (rowLength > rowNum && rowLength < 2 * rowNum) {\n        data = [...data, ...data]\n      }\n\n      data = data.map((d, i) => ({ ...d, scroll: i }))\n\n      this.rowsData = data\n      this.rows = data\n    },\n    calcHeights (onresize = false) {\n      const { height, mergedConfig } = this\n\n      const { rowNum, data } = mergedConfig\n\n      const avgHeight = height / rowNum\n\n      this.avgHeight = avgHeight\n\n      if (!onresize) this.heights = new Array(data.length).fill(avgHeight)\n    },\n    async animation (start = false) {\n      let { avgHeight, animationIndex, mergedConfig, rowsData, animation, updater } = this\n\n      const { waitTime, carousel, rowNum } = mergedConfig\n\n      const rowLength = rowsData.length\n\n      if (rowNum >= rowLength) return\n\n      if (start) {\n        await new Promise(resolve => setTimeout(resolve, waitTime))\n        if (updater !== this.updater) return\n      }\n\n      const animationNum = carousel === 'single' ? 1 : rowNum\n\n      let rows = rowsData.slice(animationIndex)\n      rows.push(...rowsData.slice(0, animationIndex))\n\n      this.rows = rows.slice(0, rowNum + 1)\n      this.heights = new Array(rowLength).fill(avgHeight)\n\n      await new Promise(resolve => setTimeout(resolve, 300))\n      if (updater !== this.updater) return\n\n      this.heights.splice(0, animationNum, ...new Array(animationNum).fill(0))\n\n      animationIndex += animationNum\n\n      const back = animationIndex - rowLength\n      if (back >= 0) animationIndex = back\n\n      this.animationIndex = animationIndex\n      this.animationHandler = setTimeout(animation, waitTime - 300)\n    },\n    stopAnimation () {\n      const { animationHandler, updater } = this\n\n      this.updater = (updater + 1) % 999999\n\n      if (!animationHandler) return\n\n      clearTimeout(animationHandler)\n    },\n  },\n  destroyed () {\n    const { stopAnimation } = this\n\n    stopAnimation()\n  }\n}\n</script>"],"mappings":"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","ignoreList":[]}]}