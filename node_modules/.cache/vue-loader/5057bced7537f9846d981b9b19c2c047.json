{"remainingRequest":"D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\src\\views\\index.vue?vue&type=style&index=0&id=a83bd3b0&lang=scss","dependencies":[{"path":"D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\src\\views\\index.vue","mtime":1714968882856},{"path":"D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\css-loader\\dist\\cjs.js","mtime":1710867534962},{"path":"D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1710867531401},{"path":"D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\postcss-loader\\src\\index.js","mtime":1710867532662},{"path":"D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1710867563138},{"path":"D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1710867555791},{"path":"D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1710867531387}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQovL+WFqOWxgOagt+W8j+mDqOWIhu+8ge+8ge+8ge+8gQ0KKiB7DQogIG1hcmdpbjogMHB4Ow0KICBwYWRkaW5nOiAwcHg7DQogIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTsNCiAgb3V0bGluZTogbm9uZTsNCiAgYm94LXNpemluZzogYm9yZGVyLWJveDsNCn0NCg0KaHRtbCB7DQogIG1hcmdpbjogMDsNCiAgcGFkZGluZzogMDsNCn0NCg0KLy8gYm9keSB7DQovLyAgIGZvbnQtZmFtaWx5OiBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOw0KLy8gICAvLyBsaW5lLWhlaWdodDogMS4yZW07DQovLyAgIGJhY2tncm91bmQtY29sb3I6ICNmMWYxZjE7DQovLyAgIG1hcmdpbjogMDsNCi8vICAgcGFkZGluZzogMDsNCi8vIH0NCg0KYSB7DQogIGNvbG9yOiAjMzQzNDQwOw0KICB0ZXh0LWRlY29yYXRpb246IG5vbmU7DQp9DQoNCi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCg0KLy/pobXpnaLmoLflvI/pg6jliIbvvIHvvIHvvIHvvIENCi5jb250YWluZXIgew0KICBjb2xvcjogI2QzZDZkZDsNCiAgbWF4LXdpZHRoOiAxNzAwcHg7DQogIC8qIOacgOWkp+WuveW6pumZkOWItuS4ujE3MDBweCAqLw0KICB3aWR0aDogMTAwJTsNCiAgLyog5Yid5aeL5a695bqm5Li6MTAwJSAqLw0KICBoZWlnaHQ6IGF1dG87DQogIC8qIOmrmOW6puiHqumAguW6lCAqLw0KICBtYXJnaW46IDAgYXV0bzsNCiAgLyog5rC05bmz5bGF5LitICovDQogIG92ZXJmbG93OiB2aXNpYmxlOw0KICAvKiDlsJ3or5Xkv67mlLkgb3ZlcmZsb3cg5bGe5oCn5Li6IHZpc2libGUgKi8NCn0NCg0KLy8gLmNvbnRhaW5lciB7DQovLyAgIGNvbG9yOiAjZDNkNmRkOw0KLy8gICB3aWR0aDogMTAwJTsgLyog5Yid5aeL5a695bqm5Li6MTAwJSAqLw0KLy8gICBtYXgtd2lkdGg6IDE3MDBweDsgLyog5pyA5aSn5a695bqm6ZmQ5Yi25Li6MTcwMHB4ICovDQovLyAgIGhlaWdodDogYXV0bzsgLyog6auY5bqm6Ieq6YCC5bqUICovDQovLyAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCi8vICAgdG9wOiA1MCU7DQovLyAgIGxlZnQ6IDUwJTsNCi8vICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7DQovLyAgIHRyYW5zZm9ybS1vcmlnaW46IGxlZnQgdG9wOw0KLy8gICBvdmVyZmxvdzogdmlzaWJsZTsgLyog5bCd6K+V5L+u5pS5IG92ZXJmbG93IOWxnuaAp+S4uiB2aXNpYmxlICovDQovLyB9DQoNCi5jb250YWluZXItaW5uZXIgew0KICB3aWR0aDogNTAlOw0KfQ0KDQojaW5kZXggew0KICBjb2xvcjogI2QzZDZkZDsNCiAgd2lkdGg6IDE4OTBweDsNCiAgaGVpZ2h0OiBhdXRvOw0KICBwb3NpdGlvbjogYWJzb2x1dGU7DQogIHRvcDogNDklOw0KICBsZWZ0OiA1MCU7DQogIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpOw0KICB0cmFuc2Zvcm0tb3JpZ2luOiBsZWZ0IHRvcDsNCiAgb3ZlcmZsb3c6IGhpZGRlbjsNCg0KICAuYmcgew0KICAgIC8v5pW05L2T6aG16Z2i6IOM5pmvDQogICAgd2lkdGg6IDEwMCU7DQogICAgaGVpZ2h0OiAxMDAlOw0KICAgIHBhZGRpbmc6IDE2cHggMTZweCAwIDE2cHg7DQogICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCIuLi9hc3NldHMvaW1hZ2VzL2JhY2tncm91bmQucG5nIik7IC8v6IOM5pmv5Zu+DQogICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjsgLy/og4zmma/lsLrlr7gNCiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyOyAvL+iDjOaZr+S9jee9rg0KICB9DQoNCiAgLy/pobbpg6jlj7Povrnoo4XppbDmlYjmnpwNCiAgLnRpdGxlX2xlZnQgew0KICAgIHdpZHRoOiAxMDAlOw0KICAgIGhlaWdodDogNTBweDsNCiAgfQ0KDQogIC8v6aG26YOo5bem6L656KOF6aWw5pWI5p6cDQogIC50aXRsZV9yaWdodCB7DQogICAgd2lkdGg6IDEwMCU7DQogICAgaGVpZ2h0OiA1MHB4Ow0KICAgIG1hcmdpbi10b3A6IDE4cHg7DQogIH0NCg0KICAvL+mhtumDqOS4remXtOijhemlsOaViOaenA0KICAudGl0bGVfY2VudGVyIHsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBoZWlnaHQ6IDVweDsNCiAgfQ0KDQogIC8v6aG26YOo5Lit6Ze06Zm25rqQ55Sf54mp6LWE5Lqn55uR566h57O757ufDQogIC50aXRsZV90ZXh0IHsNCiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogICAgZm9udC1zaXplOiAyNHB4Ow0KICAgIGZvbnQtd2VpZ2h0OiBib2xkOw0KICAgIG1hcmdpbi10b3A6IDMwcHg7DQogICAgY29sb3I6ICMwMDhjZmY7DQogIH0NCg0KICAvL+aXtumXtOaXpeacnw0KICAudGl0bGVfdGltZSB7DQogICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICB9DQoNCiAgLy/kuK3lm73lnLDlm74NCiAgI2NoaW5hLW1hcCB7DQogICAgaGVpZ2h0OiA2MTBweDsNCiAgICB3aWR0aDogMTAwJTsNCiAgfQ0KDQogIC8v5Lit6Ze05oqY57q/5Zu+DQogIC5saW5lX2NlbnRlciB7DQogICAgd2lkdGg6IDEwMCU7DQogICAgaGVpZ2h0OiAzMDBweDsNCiAgfQ0KDQogIC8v5bemMeaooeWdlw0KICAubGVmdF9ib3gxIHsNCiAgICBoZWlnaHQ6IDMwMHB4Ow0KICAgIHdpZHRoOiA5NiU7DQogICAgbWFyZ2luLWxlZnQ6IDIlOw0KICAgIG1hcmdpbi1ib3R0b206IDEwcHg7DQogICAgcG9zaXRpb246IHJlbGF0aXZlOw0KICB9DQoNCiAgLy/lt6Yy5qih5Z2XDQogIC5sZWZ0X2JveDIgew0KICAgIGhlaWdodDogMjgwcHg7DQogICAgd2lkdGg6IDk2JTsNCiAgICBtYXJnaW4tbGVmdDogMiU7DQogICAgbWFyZ2luLWJvdHRvbTogMTBweDsNCiAgfQ0KDQogIC8v5bemM+aooeWdlw0KICAubGVmdF9ib3gzIHsNCiAgICBoZWlnaHQ6IDMwMHB4Ow0KICAgIHdpZHRoOiA5NiU7DQogICAgbWFyZ2luLWxlZnQ6IDIlOw0KICB9DQoNCiAgLy/lj7Mx5qih5Z2XDQogIC5yaWdodF9ib3gxIHsNCiAgICBoZWlnaHQ6IDMwMHB4Ow0KICAgIHdpZHRoOiA5NCU7DQogICAgbWFyZ2luLWxlZnQ6IDIlOw0KICAgIG1hcmdpbi1ib3R0b206IDEwcHg7DQogIH0NCg0KICAvL+WPszLmqKHlnZcNCiAgLnJpZ2h0X2JveDIgew0KICAgIGhlaWdodDogMjgwcHg7DQogICAgd2lkdGg6IDk0JTsNCiAgICBtYXJnaW4tbGVmdDogMiU7DQogICAgbWFyZ2luLWJvdHRvbTogMTBweDsNCiAgfQ0KDQogIC8v5Y+zM+aooeWdlw0KICAucmlnaHRfYm94MyB7DQogICAgaGVpZ2h0OiAzMDBweDsNCiAgICB3aWR0aDogOTQlOw0KICAgIG1hcmdpbi1sZWZ0OiAyJTsNCiAgfQ0KDQogIC8v5bemMeaooeWdly3njqvnkbDppbzlm74NCiAgI1Jvc2VfZGlhZ3JhbSB7DQogICAgaGVpZ2h0OiA4MCU7DQogICAgd2lkdGg6IDU1JTsNCiAgICB0b3A6IDYwcHg7DQogIH0NCg0KICAvL+W3pjHmqKHlnZct5ZyG546v5Zu+DQogIC5sZWZ0X2JveDFfcm9zZV9yaWdodCB7DQogICAgaGVpZ2h0OiA4NSU7DQogICAgd2lkdGg6IDU1JTsNCiAgICBwb3NpdGlvbjogYWJzb2x1dGU7DQogICAgcmlnaHQ6IDA7DQogICAgdG9wOiAyNXB4Ow0KICB9DQoNCiAgLy/lt6Yx5qih5Z2XLeaWh+Wtl+mDqOWIhg0KICAucm9zZV90ZXh0IHsNCiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQogICAgbWFyZ2luLXRvcDogNCU7DQogICAgbWFyZ2luLWxlZnQ6IDQlOw0KICB9DQoNCiAgLy8g5bemMeaooeWdly3vv6XnrKblj7fmoLflvI8NCiAgLmNvaW4gew0KICAgIGZvbnQtc2l6ZTogMjBweDsNCiAgICBjb2xvcjogI2ZmYzEwNzsNCiAgfQ0KDQogIC8v5bemMeaooeWdly3vvIjku7bvvInmoLflvI8NCiAgLmNvbG9yWWVsbG93IHsNCiAgICBjb2xvcjogeWVsbG93Z3JlZW47DQogIH0NCg0KICAvL+W3pjHmqKHlnZct5pWw5a2X5qC35byPDQogIC5yb3NlX3RleHRfbm1iIHsNCiAgICBmb250LXNpemU6IDIwcHg7DQogICAgY29sb3I6ICMwMGI4OTE7DQogIH0NCg0KICAvL+W3pjLmqKHlnZcg5p+x54q25Zu+DQogICNjb2x1bW5hciB7DQogICAgaGVpZ2h0OiA5NyU7DQogICAgd2lkdGg6IDk1JTsNCiAgICBtYXJnaW4tbGVmdDogMyU7DQogICAgbWFyZ2luLXRvcDogMTBweDsNCiAgfQ0KDQogIC8v5oqY57q/5Zu+DQogICNsaW5lX2NlbnRlcl9kaWFncmFtIHsNCiAgICBoZWlnaHQ6IDEwMCU7DQogICAgd2lkdGg6IDEwMCU7DQogIH0NCg0KICAvL+i9ruaSreihqOagvA0KICAuY2Fyb3VzZWxfbGlzdCB7DQogICAgd2lkdGg6IDk2JTsNCiAgICBoZWlnaHQ6IDk4JTsNCiAgICBtYXJnaW4tbGVmdDogMTBweDsNCiAgfQ0KDQogIC8v6Jma57q/5p+x54q25Zu+DQogICNkb3R0ZXJfYmFyIHsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBoZWlnaHQ6IDEwMCU7DQogIH0NCg0KICAvL+mUpeW9ouWbvg0KICAuY29uZV9ib3ggew0KICAgIHdpZHRoOiA5NSU7DQogICAgaGVpZ2h0OiA5NyU7DQogICAgbWFyZ2luLWxlZnQ6IDMlOw0KICB9DQp9DQoNCi8v6aKE6K2m5L+h5oGv6IOM5pmv6YCP5piODQouZWwtdGFibGUsDQouZWwtdGFibGVfX2V4cGFuZGVkLWNlbGwsDQp0ciwNCi5lbC10YWJsZV9fY2VsbCB7DQogIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7DQp9DQoNCi8qIOWcqOS9oOeahOagt+W8j+ihqOS4rea3u+WKoOiHquWumuS5ieagt+W8jyAqLw0KLmN1c3RvbS1ib3JkZXItYm94IHsNCiAgYm9yZGVyOiBub25lOw0KICAvKiDnp7vpmaTovrnmoYYgKi8NCiAgcGFkZGluZzogMTBweDsNCiAgLyog5Y+v6YCJ77ya5o6n5Yi25YaF5a655LiO6L655qGG55qE6Ze06LedICovDQogIGRpc3BsYXk6IGlubGluZS1ibG9jazsNCiAgLyog5oiW6ICF5L2/55SoIGRpc3BsYXk6IGlubGluZS1mbGV4OyAqLw0KICAvKiDlhbbku5bmoLflvI8gKi8NCn0NCi8vIC5waWUtY2hhcnQtY29udGFpbmVyIHsNCi8vICAgICB3aWR0aDogMjAwcHg7DQovLyAgICAgaGVpZ2h0OiAyMDBweDsNCi8vICAgICBtYXJnaW4tcmlnaHQ6IDIwMHB4Ow0KLy8gICAgIG1hcmdpbi1ib3R0b206IDIwMHB4Ow0KLy8gICB9DQo="},{"version":3,"sources":["index.vue"],"names":[],"mappingsw7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div id=\"index\" ref=\"appRef\">\r\n    <div class=\"bg\">\r\n      <dv-loading v-show=\"loading\">Loading...</dv-loading>\r\n      <div class=\"host-body\">\r\n        <div>\r\n          <!-- 顶部title部分 -->\r\n          <el-row>\r\n            <el-col :span=\"6\"><dv-decoration-8 class=\"title_right\" :color=\"['#008CFF', '#00ADDD']\" /></el-col>\r\n            <el-col :span=\"12\">\r\n              <div class=\"title_text\">陶 源 生 物 资 产 监 管 系 统</div>\r\n              <dv-decoration-5 class=\"title_center\" :color=\"['#008CFF', '#00ADDD']\" />\r\n            </el-col>\r\n            <el-col :span=\"6\">\r\n              <!-- <div class=\"title_time\">{{ dateYear + dateWeek + dateDay }}</div> -->\r\n              <dv-decoration-8 :reverse=\"true\" class=\"title_left\" :color=\"['#008CFF', '#00ADDD']\" />\r\n            </el-col>\r\n          </el-row>\r\n          <!-- 主体部分 -->\r\n          <el-row>\r\n            <!-- 第一列 -->\r\n            <el-col :span=\"6\">\r\n              <!-- 饼图部分 -->\r\n              <div class=\"left_box1\">\r\n                <dv-border-box-12 :border=\"false\">\r\n                  <div id=\"Rose_diagram\"></div>\r\n                  <dv-active-ring-chart :config=\"config\" class=\"left_box1_rose_right\" />\r\n                  <div class=\"rose_text\" v-for=\"(item, index) in numberData\" :key=\"index\">\r\n                    <!-- <p>\r\n                      <span class=\"coin\">￥</span>\r\n                      <span class=\"rose_text_nmb\">{{\r\n                        item.number.number\r\n                      }}</span>\r\n                    </p> -->\r\n                    <p>\r\n                      <span>{{ item.text }}</span>\r\n                      <span class=\"colorYellow\"></span>\r\n                    </p>\r\n                  </div>\r\n                </dv-border-box-12>\r\n              </div>\r\n              <!-- 柱状图部分 -->\r\n              <div class=\"left_box2\">\r\n                <dv-border-box-12 style=\"padding-top: 13px\">\r\n                  <p style=\"margin-left: 13px\">品种数量</p>\r\n                  <div id=\"columnar\"></div>\r\n                </dv-border-box-12>\r\n              </div>\r\n              <!-- 轮播表格部分 :config=\"board_info\" -->\r\n              <div class=\"left_box3\">\r\n                <dv-border-box-12 style=\"padding-top: 10px\">\r\n                  <!-- 饼形图容器 -->\r\n               <div ref=\"pieChart\" style=\"width: 350px; height: 300px; margin-left: 50px; margin-top: 15px\"></div>\r\n                </dv-border-box-12>\r\n               \r\n    <!-- 饼形图容器 -->\r\n    <!-- <div ref=\"pieChart\" style=\"width: 200px; height: 50px;\"></div> -->\r\n  \r\n              </div>\r\n            </el-col>\r\n            <!-- 第二列 -->\r\n            <el-col :span=\"12\">\r\n              <!-- 中国地图 -->\r\n              <div id=\"china-map\" ref=\"china-map\"></div>\r\n              <!-- 折线图 -预警表-->\r\n              <dv-border-box-8>\r\n                <div id=\"line_center_diagram\"></div>\r\n              </dv-border-box-8>\r\n\r\n              <dv-border-box-12 style=\"padding-top: 38px\">\r\n                <div class=\"warning_table\">\r\n                  <div style=\"height: 250px; overflow-y: auto;\">\r\n\r\n                    <el-table class=\"el-table\" :data=\"tableData\" height=\"100%\"\r\n                      style=\"width: 98%;margin-left: 10px;margin-top:-15px; color:cyan;\">\r\n                      <el-table-column prop=\"agroUserName\" label=\"养殖户\" width=\"180\">\r\n                      </el-table-column>\r\n                      <el-table-column prop=\"agroLivestockIccid\" label=\"设备编号\" width=\"180\">\r\n                      </el-table-column>\r\n                      <el-table-column prop=\"livestockVarieties\" label=\"品种\">\r\n                      </el-table-column>\r\n                      <el-table-column prop=\"info\" label=\"预警信息\">\r\n                      </el-table-column>\r\n                      <el-table-column prop=\"date\" label=\"预警时间\">\r\n                      </el-table-column>\r\n                    </el-table>\r\n                  </div>\r\n                </div>\r\n              </dv-border-box-12>\r\n\r\n\r\n            </el-col>\r\n            <!-- 第三列 -->\r\n            <el-col :span=\"6\">\r\n              <!-- 轮播排行榜部分 -->\r\n              <div class=\"right_box1\">\r\n                <dv-border-box-12 :border=\"false\">\r\n                  <dv-decoration-7 style=\"width: 100%; height: 30px\">品 种 排 名</dv-decoration-7>\r\n                  <dv-scroll-ranking-board :config=\"config\" style=\"width: 95%; height: 87%; margin-left: 2%\" />\r\n                </dv-border-box-12>\r\n              </div>\r\n              <!-- <div class=\"right_box1\">\r\n                <dv-border-box-12>\r\n                  <dv-decoration-7 style=\"width: 100%; height: 30px\"\r\n                    >品 种 排 名</dv-decoration-7\r\n                  >\r\n                  <dv-scroll-ranking-board\r\n                    :config=\"config\"\r\n                    style=\"width: 95%; height: 87%; margin-left: 2%\"\r\n                  />\r\n                </dv-border-box-12>\r\n              </div> -->\r\n              <!-- 养 殖 户 排 名 -->\r\n              <div class=\"right_box2\">\r\n                <dv-border-box-12 :border=\"false\">\r\n                  <dv-decoration-7 style=\"width: 100%; height: 30px\">养 殖 户 排 名</dv-decoration-7>\r\n                  <dv-scroll-ranking-board :config=\"userNum\" style=\"width: 95%; height: 87%; margin-left: 2%\" />\r\n                </dv-border-box-12>\r\n              </div>\r\n\r\n              <!-- 第二个部分 -->\r\n              <div class=\"right_box3\">\r\n                <dv-border-box-12 :reverse=\"true\" class=\"custom-border-box\">\r\n                  <!-- <dv-conical-column-chart :config=\"cone\" class=\"cone_box\" /> -->\r\n                  <div ref=\"collarChart\" style=\"width: 380px; height: 300px; margin-left: 30px; margin-top: 20px\"></div>\r\n                </dv-border-box-12>\r\n              \r\n              </div>\r\n              <!-- <div class=\"right_box2\">\r\n                <dv-border-box-12 :reverse=\"true\">\r\n                  <div id=\"dotter_bar\"></div>\r\n                </dv-border-box-12>\r\n              </div> -->\r\n              <!-- 部分 -->\r\n              <!-- <div class=\"right_box3\">\r\n                <dv-border-box-12 :reverse=\"true\">\r\n                  <dv-conical-column-chart :config=\"cone\" class=\"cone_box\" />\r\n                </dv-border-box-12>\r\n              </div> -->\r\n\r\n            </el-col>\r\n          </el-row>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n// 将自动注册所有组件为全局组件4.15\r\n// import dataV from '@jiaminghi/data-view' \r\n// Vue.use(dataV)\r\n// import ElementUI from 'element-ui';  \r\n// import 'element-ui/lib/theme-chalk/index.css';\r\n//  Vue.use(ElementUI);\r\n// import geoJson from '@/views/china.json'\r\n// import * as echarts from 'echarts'\r\n// Vue.prototype.$echarts = echarts\r\n// echarts.registerMap('china', geoJson);\r\n\r\n\r\nimport drawMixin from \"./drawMixin\"; //自适应缩放\r\nimport { listagroIndex, listagroRankingFarmers,dmAlarmDataIndexList,ebOnOffLineDevice,xqOnOffLineDevice} from \"@/api/agroIndex/agroIndex\";//首页品种数量\r\nimport { listUser} from \"@/api/agro/user\";\r\n// import { formatTime } from \"../utils/index.js\"; //日期格式转换\r\n\r\n// 引入 ECharts\r\nimport * as echarts from 'echarts/core';\r\nimport { PieChart } from 'echarts/charts';\r\nimport { TooltipComponent } from 'echarts/components';\r\nimport { CanvasRenderer } from 'echarts/renderers';\r\n// 使用必要的组件\r\necharts.use([PieChart, TooltipComponent, CanvasRenderer]);\r\n import chinamap from './china.json';\r\nexport default {\r\n  mixins: [drawMixin],\r\n  name: 'PieChartExample',\r\n  name: 'CollarChartExample',\r\n  data() {\r\n    return {\r\n      //centerl用户坐标\r\n      centerl: [],\r\n      //用户信息\r\n         userList: [],\r\n      //左侧饼形图耳标在线数量\r\n      chartData: [],\r\n      //右侧饼形图项圈在线数量\r\n      collarchartData: [],\r\n      myChart: null,\r\n      //首页用户排名\r\n      agroNumlist: [],\r\n      //首页品种集合\r\n      IndexVarList: [],\r\n      //定时器\r\n      timing: null,\r\n      //loading图\r\n      loading: true,\r\n      //时分秒\r\n      dateDay: null,\r\n      //年月日\r\n      dateYear: null,\r\n      //周几\r\n      dateWeek: null,\r\n      //周几\r\n      weekday: [\"周日\", \"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\"],\r\n\r\n      //预警信息\r\n      tableData: [],\r\n\r\n      //轮播养殖户排名\r\n      userNum: {\r\n        data: [],\r\n      },\r\n      //轮播品种排行榜\r\n      config: {\r\n        data: [],\r\n      },\r\n\r\n      //左侧饼图文字\r\n      numberData: [\r\n        {\r\n          number: {\r\n            number: 15,\r\n          },\r\n          text: \"牛群结构\",\r\n        },\r\n        // {\r\n        //   number: {\r\n        //     number: 1144,\r\n        //   },\r\n        //   text: \"总共完成数量\",\r\n        // },\r\n        // {\r\n        //   number: {\r\n        //     number: 361,\r\n        //   },\r\n        //   text: \"正在编译数量\",\r\n        // },\r\n      ],\r\n      //左侧轮播表格配置项\r\n      // board_info: {\r\n      //   header: [\"养殖户名称\", \"监控设备编号\", \"设备状态\"],\r\n      //   data: [\r\n      //     [\"张三\", \"10830\", \"在线\"],\r\n      //     [\"张四\", \"13500\", \"在线\"],\r\n      //     [\"张五\", \"10350\", \"在线\"],\r\n      //     [\"张六\", \"13300\", \"在线\"],\r\n      //     [\"张七\", \"12500\", \"在线\"],\r\n      //     [\"张八\", \"11500\", \"在线\"],\r\n      //     [\"张九\", \"12500\", \"在线\"],\r\n      //     [\"王六\", \"10360\", \"在线\"],\r\n      //     [\"王二\", \"10567\", \"在线\"],\r\n      //     [\"李四\", \"15721\", \"在线\"],\r\n      //   ],\r\n      //   evenRowBGC: \"#020308\",\r\n      //   oddRowBGC: \"#382B47\",\r\n      //   headerBGC: \"#020308\",\r\n      // },\r\n      // 定义颜色\r\n      colorList: {\r\n        linearYtoG: {\r\n          type: \"linear\",\r\n          x: 0,\r\n          y: 0,\r\n          x2: 1,\r\n          y2: 1,\r\n          colorStops: [\r\n            {\r\n              offset: 0,\r\n              color: \"#f5b44d\",\r\n            },\r\n            {\r\n              offset: 1,\r\n              color: \"#28f8de\",\r\n            },\r\n          ],\r\n        },\r\n        linearGtoB: {\r\n          type: \"linear\",\r\n          x: 0,\r\n          y: 0,\r\n          x2: 1,\r\n          y2: 0,\r\n          colorStops: [\r\n            {\r\n              offset: 0,\r\n              color: \"#43dfa2\",\r\n            },\r\n            {\r\n              offset: 1,\r\n              color: \"#28f8de\",\r\n            },\r\n          ],\r\n        },\r\n        linearBtoG: {\r\n          type: \"linear\",\r\n          x: 0,\r\n          y: 0,\r\n          x2: 1,\r\n          y2: 0,\r\n          colorStops: [\r\n            {\r\n              offset: 0,\r\n              color: \"#1c98e8\",\r\n            },\r\n            {\r\n              offset: 1,\r\n              color: \"#28f8de\",\r\n            },\r\n          ],\r\n        },\r\n        areaBtoG: {\r\n          type: \"linear\",\r\n          x: 0,\r\n          y: 0,\r\n          x2: 0,\r\n          y2: 1,\r\n          colorStops: [\r\n            {\r\n              offset: 0,\r\n              color: \"rgba(35,184,210,.2)\",\r\n            },\r\n            {\r\n              offset: 1,\r\n              color: \"rgba(35,184,210,0)\",\r\n            },\r\n          ],\r\n        },\r\n      },\r\n\r\n      //锥形柱状图\r\n      // cone: {\r\n      //   data: [\r\n\r\n      //     {\r\n      //       name: \"鸡\",\r\n      //       value: 66,\r\n      //     },\r\n\r\n      //     {\r\n      //       name: \"鸭\",\r\n      //       value: 80,\r\n      //     },\r\n\r\n      //     {\r\n      //       name: \"牛\",\r\n      //       value: 45,\r\n      //     },\r\n\r\n      //     {\r\n      //       name: \"鹅\",\r\n      //       value: 29,\r\n      //     },\r\n\r\n      //     {\r\n      //       name: \"兔\",\r\n      //       value: 55,\r\n      //     },\r\n      //     {\r\n      //       name: \"羊\",\r\n      //       value: 120,\r\n      //     },\r\n\r\n      //   ],\r\n      //   showValue: true,\r\n      // },\r\n    };\r\n  },\r\n  created() {\r\n    this.getIndexVarList();\r\n    this.getAgroNumlist();\r\n    this.getDmAlarmDataIndexList();\r\n    this.getebDeviceState();\r\n    this.getxqDeviceState();\r\n    this.getUserList();\r\n  },\r\n\r\n  mounted() {\r\n // 假设在 mounted 钩子函数中获取后端数据，并赋值给 IndexVarList 数组\r\n    // this.fetchData();\r\n    // //获取实时时间\r\n    // this.timeFn();\r\n    //加载loading图\r\n    this.cancelLoading();\r\n\r\n    //中间折线图\r\n    this.line_center_diagram();\r\n    //虚线柱状图\r\n    // this.dotter_bar();\r\n\r\n  },\r\n  beforeDestroy() {\r\n    //离开时删除计时器\r\n    clearInterval(this.timing);\r\n  },\r\n  methods: {\r\n        /**\r\n          * 获取农户信息\r\n          */ \r\n      getUserList(){\r\n        listUser().then( res => {\r\n          if( res.code != 200){ return this.message(\"系统错误,请重新查询\") }\r\n          this.userList = res.rows\r\n          this.userList.forEach(user => {\r\n          const lon = parseFloat(user.lon); // 将经度字符串转换为浮点数\r\n          const lat = parseFloat(user.lat); // 将纬度字符串转换为浮点数\r\n          const userName =user.name\r\n              // 将经纬度数据添加到 this.centerl 数组中\r\n            this.centerl.push({userName:[userName],value: [lon, lat] });\r\n              //中国地图\r\n             this.china_map();\r\n          });\r\n\r\n            //获取设备数据\r\n            // this.getList();\r\n          // 在成功获取用户列表后再初始化地图\r\n          // this.initMap();\r\n\r\n\r\n          // console.log(this.userLis+\"============\"+ res.rows);\r\n       }\r\n         )\r\n    },\r\n    //项圈在线数量\r\n    initCollarChart() {\r\n      // 基于准备好的dom，初始化echarts实例\r\n      const myChart = echarts.init(this.$refs.collarChart);\r\n\r\n      // 配置项\r\n      const option = {\r\n        title: {\r\n            text: '项圈在线数',\r\n            left: 'center',\r\n            textStyle: {\r\n              color: 'white' // 设置字体颜色为白色\r\n            }\r\n          },\r\n          textStyle: {\r\n                      fontFamily: 'Helvetica', // 设置字体为 Helvetica\r\n                      fontSize: 20, // 设置字体大小为 25 像素\r\n                     \r\n                    },\r\n        tooltip: {\r\n          trigger: 'item',\r\n          formatter: '{a} <br/>{b}: {c} ({d}%)'\r\n        },\r\n        series: [\r\n          {\r\n            name: '在线情况',\r\n            type: 'pie',\r\n            radius: '50%',\r\n            data: this.collarchartData,\r\n            emphasis: {\r\n              itemStyle: {\r\n                shadowBlur: 10,\r\n                shadowOffsetX: 0,\r\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      };\r\n\r\n      // 使用配置项显示图表\r\n      myChart.setOption(option);\r\n    },\r\n\r\n    //耳标在线数量\r\n    initPieChart() {\r\n      // 基于准备好的dom，初始化echarts实例\r\n      const myChart = echarts.init(this.$refs.pieChart);\r\n\r\n      // 耳标在线数量配置项\r\n      const option = {\r\n        title: {\r\n            text: '耳标在线数',\r\n            left: 'center',\r\n            textStyle: {\r\n              color: 'white' // 设置字体颜色为白色\r\n            }\r\n          },\r\n          textStyle: {\r\n                      fontFamily: 'Helvetica', // 设置字体为 Helvetica\r\n                      fontSize: 20, // 设置字体大小为 25 像素\r\n                     \r\n                    },\r\n        tooltip: {\r\n          trigger: 'item',\r\n          formatter: '{a} <br/>{b}: {c} ({d}%)'\r\n        },\r\n        series: [\r\n          {\r\n            name: '耳标',\r\n            type: 'pie',\r\n            radius: '50%',\r\n            data: this.chartData,\r\n            color: ['#CD5C5C','#90EE90'], // 设置颜色数组\r\n            emphasis: {\r\n              itemStyle: {\r\n                shadowBlur: 10,\r\n                shadowOffsetX: 0,\r\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      };\r\n\r\n      // 使用配置项显示图表\r\n      myChart.setOption(option);\r\n    },\r\n   /**\r\n    * 获取品种信息\r\n    */\r\n    getIndexVarList() {\r\n      this.loading = true;\r\n      listagroIndex().then(response => {\r\n        // 获取后端返回的数据\r\n        const rows = response.rows;\r\n\r\n        // 将获取的数据赋值给 IndexVarList\r\n        // this.IndexVarList = rows;\r\n\r\n        // 对数据进行格式化并赋值给 config 对象中的 data 属性\r\n        const formattedData = rows.map(item => {\r\n          return {\r\n            value: parseInt(item.varietiesNum), // 将字符串转换为整数\r\n            name: item.livestockVarieties\r\n          };\r\n        });\r\n        this.$delete(this.config, 'data');\r\n        this.$set(this.config, 'data', formattedData);\r\n        // this.config.data=formattedData;\r\n\r\n        //左侧柱状图\r\n        this.columnar();\r\n        //左侧玫瑰饼图\r\n        this.Rose_diagram();\r\n        this.loading = false; // 数据加载完成后设置 loading 为 false\r\n      }).catch(error => {\r\n        console.error('获取数据出错：', error);\r\n        this.loading = false; // 数据加载出错时也需要设置 loading 为 false\r\n      });\r\n    },\r\n    /**\r\n     * 获取养殖户排名\r\n     */\r\n    getAgroNumlist() {\r\n      this.loading = true;\r\n      listagroRankingFarmers().then(response => {\r\n        // 获取后端返回的数据\r\n        const rows = response.rows;\r\n\r\n        // 将获取的数据赋值给 IndexVarList\r\n        // this.agroNumlist = rows;\r\n\r\n        // 对数据进行格式化并赋值给 config 对象中的 data 属性\r\n        const formattedData = rows.map(item => {\r\n          return {\r\n            value: parseInt(item.num), // 将字符串转换为整数\r\n            name: item.agroUserName\r\n          };\r\n        });\r\n        this.$delete(this.userNum, 'data');\r\n        this.$set(this.userNum, 'data', formattedData);\r\n        // this.config.data=formattedData;\r\n\r\n\r\n        this.loading = false; // 数据加载完成后设置 loading 为 false\r\n      }).catch(error => {\r\n        console.error('获取数据出错：', error);\r\n        this.loading = false; // 数据加载出错时也需要设置 loading 为 false\r\n      });\r\n    },\r\n\r\n    /**\r\n     * 报警数据\r\n     */\r\n    getDmAlarmDataIndexList() {\r\n      this.loading = true;\r\n      dmAlarmDataIndexList().then(response => {\r\n        // 获取后端返回的数据\r\n    this.tableData = response.rows;\r\n    this.loading = false; // 数据加载完成后设置 loading 为 false\r\n      }).catch(error => {\r\n        console.error('获取数据出错：', error);\r\n        this.loading = false; // 数据加载出错时也需要设置 loading 为 false\r\n      });\r\n    },\r\n       /**\r\n        * 耳标设备在线离线数量\r\n        *  \r\n        */  \r\n    getebDeviceState() {\r\n    this.loading = true;\r\n    ebOnOffLineDevice().then(response => {\r\n             this.chartData = response.rows.map(row => {\r\n             return {\r\n                value: parseInt(row.totalNumber),\r\n                name: row.deviceStatus === '在线' ? '在线耳标' : '离线耳标',\r\n                itemStyle: {\r\n                    color: row.deviceStatus === '在线' ? '#90EE90' : '#CD5C5C'\r\n                }\r\n            };\r\n             });\r\n               // 初始化 耳标 \r\n    this.initPieChart();\r\n        this.loading = false; // 数据加载完成后设置 loading 为 false\r\n    }).catch(error => {\r\n        console.error('获取数据出错：', error);\r\n        this.loading = false; // 数据加载出错时也需要设置 loading 为 false\r\n    }); \r\n},\r\n\r\n     /**\r\n        * 项圈设备在线离线数量\r\n        *  \r\n        */  \r\n    getxqDeviceState() {\r\n      this.loading = true;\r\n      xqOnOffLineDevice().then(response => {\r\n       this.collarchartData = response.rows.map(row => {\r\n             return {\r\n                value: parseInt(row.totalNumber),\r\n                name: row.deviceStatus === '在线' ? '在线项圈' : '离线项圈',\r\n                itemStyle: {\r\n                    color: row.deviceStatus === '在线' ? '#90EE90' : '#CD5C5C'\r\n                }\r\n            };\r\n             });\r\n    // 初始化 项圈 \r\n    this.initCollarChart();\r\n        this.loading = false; // 数据加载完成后设置 loading 为 false\r\n      }).catch(error => {\r\n        console.error('获取数据出错：', error);\r\n        this.loading = false; // 数据加载出错时也需要设置 loading 为 false\r\n      });\r\n    },\r\n\r\n    //loading图\r\n    cancelLoading() {\r\n      setTimeout(() => {\r\n        this.loading = false;\r\n      }, 500);\r\n    },\r\n    /*\r\n      显示中国地图\r\n    */\r\n    china_map() {\r\n\r\n   this.myChart = this.$echarts.init(document.getElementById(\"china-map\")); \r\n      window.onresize = this.myChart.resize; //如果容器变大小，自适应从新构图\r\n\r\n      // 2. 注册可用的地图，只在 geo 组件或者map图表类型中使用\r\n      this.$echarts.registerMap(\"china\", chinamap); //用导入的json文件注册一个name:china的地图组件\r\n           // 3. 设置图表 option\r\n      var option = {\r\n geo: {\r\n          map: \"china\", //中国地图\r\n          zoom: 1.2, //缩放倍数\r\n          roam: true, //是否允许缩放和拖拽地图\r\n          label: {\r\n            normal: {\r\n              show: true, // 是否显示省份名字，现在是隐藏的状态，因为和散点图的名字重叠了。如果需要就true\r\n              textStyle: {\r\n                //名字的样式\r\n                color: \"#000080\",\r\n              },\r\n            },\r\n            emphasis: {\r\n              show: true,\r\n            },\r\n          },\r\n          //地图样式\r\n          itemStyle: {\r\n            normal: {\r\n              borderColor: \"#293171\", //地图边框颜色\r\n              borderWidth: \"2\", //地图边框粗细\r\n              areaColor: \"#0A0F33\", //地图背景色\r\n            },\r\n            //省份地图阴影\r\n            emphasis: {\r\n              areaColor: null,\r\n              shadowOffsetX: 0,\r\n              shadowOffsetY: 0,\r\n              shadowBlur: 20,\r\n              borderWidth: 0,\r\n              shadowColor: \"#fff\",\r\n            },\r\n          },\r\n        },\r\n \r\n  \r\n   \r\n        series: [\r\n          {\r\n            smooth: true,\r\n\r\n      // 这里将 require 的结果直接作为 symbol 的值\r\n            symbol: 'image://' + require('../assets/images/blue.png'),\r\n            symbolSize: 40,\r\n            name: \"在地图中显示散点图\",\r\n            type: \"scatter\",\r\n            coordinateSystem: \"geo\", //设置坐标系为 geo\r\n            data: this.centerl,\r\n              itemStyle: {\r\n              normal: {\r\n                color: \"red\",\r\n              },\r\n            },\r\n            //线的颜色样式 \r\n            lineStyle: {\r\n              normal: {\r\n                color: this.colorList.linearBtoG,\r\n                width: 3,\r\n              },\r\n            },\r\n            //填充颜色样式\r\n            areaStyle: {\r\n              normal: {\r\n                color: this.colorList.areaBtoG,\r\n              },\r\n            },\r\n             label: {\r\n      show: true,\r\n      position: \"right\", // 文字显示在点的右侧\r\n      formatter: function(params) {\r\n        // 在这里设置需要显示的文字内容\r\n        return params.data.userName;\r\n      },\r\n      textStyle: {\r\n        color: '#fff',\r\n        fontSize: 12,\r\n        fontWeight: 'bold',\r\n      }\r\n    }\r\n          },\r\n        ],\r\n      };\r\n      // 4. myChart.setOption\r\n      this.myChart.setOption(option);\r\n    }, \r\n  \r\n    //玫瑰饼图\r\n    Rose_diagram() {\r\n      let mapChart = this.$echarts.init(\r\n        document.getElementById(\"Rose_diagram\")\r\n      ); //图表初始化，china-map是绑定的元素\r\n      window.onresize = mapChart.resize; //如果容器变大小，自适应从新构图\r\n      // 提取config1中的数据\r\n      let roseData = this.config.data;\r\n\r\n\r\n      let option = {\r\n        color: [\r\n          \"#37a2da\",\r\n          \"#32c5e9\",\r\n          \"#9fe6b8\",\r\n          \"#ffdb5c\",\r\n          \"#ff9f7f\",\r\n          \"#fb7293\",\r\n          \"#e7bcf3\",\r\n          \"#8378ea\",\r\n        ],\r\n        tooltip: {\r\n          trigger: \"item\",\r\n          formatter: \"{a} <br/>{b} : {c} ({d}%)\",\r\n        },\r\n        toolbox: {\r\n          show: true,\r\n        },\r\n        calculable: true,\r\n        series: [\r\n          {\r\n            name: \"通过率统计\",\r\n            type: \"pie\",\r\n            radius: [10, 50],\r\n            roseType: \"area\",\r\n            center: [\"50%\", \"40%\"],\r\n            data: roseData,\r\n          },\r\n        ],\r\n      };\r\n      mapChart.setOption(option); //生成图表\r\n    },\r\n\r\n    //柱状图\r\n    columnar() {\r\n      let mapChart = this.$echarts.init(document.getElementById(\"columnar\")); //图表初始化，china-map是绑定的元素\r\n      window.onresize = mapChart.resize; //如果容器变大小，自适应从新构图\r\n\r\n      // 提取config1中的数据\r\n      let xAxisData = this.config.data.map(item => item.name);\r\n      let seriesData = this.config.data.map(item => item.value);\r\n      let option = {\r\n        title: {\r\n          text: \"\",\r\n        },\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n          backgroundColor: \"rgba(255,255,255,0.1)\",\r\n          axisPointer: {\r\n            type: \"shadow\",\r\n            label: {\r\n              show: true,\r\n              backgroundColor: \"#7B7DDC\",\r\n            },\r\n          },\r\n        },\r\n        grid: {\r\n          x: \"8%\",\r\n          width: \"95%\",\r\n          y: \"4%\",\r\n        },\r\n        xAxis: {\r\n          data: xAxisData, // 使用config1中的数据\r\n          // data: [\r\n          // xAxisData, // 使用config1中的数据\r\n          // ],\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: \"#B4B4B4\",\r\n            },\r\n          },\r\n          axisTick: {\r\n            show: false,\r\n          },\r\n        },\r\n        yAxis: [\r\n          {\r\n            splitLine: { show: false },\r\n            axisLine: {\r\n              lineStyle: {\r\n                color: \"#B4B4B4\",\r\n              },\r\n            },\r\n\r\n            axisLabel: {\r\n              formatter: \"{value} \",\r\n            },\r\n          },\r\n        ],\r\n        series: [\r\n          {\r\n            name: \"数量\",\r\n            type: \"bar\",\r\n            barWidth: 10,\r\n            itemStyle: {\r\n              normal: {\r\n                barBorderRadius: 5,\r\n                color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                  { offset: 0, color: \"#956FD4\" },\r\n                  { offset: 1, color: \"#3EACE5\" },\r\n                ]),\r\n              },\r\n            },\r\n            data: seriesData, // 使用config1中的数据\r\n            // data: [\r\n            //   46, 50, 55, 650, 75, 85, 99, 125,\r\n            // ],\r\n          },\r\n        ],\r\n      };\r\n      mapChart.setOption(option); //生成图表\r\n    },\r\n    //折线图\r\n    line_center_diagram() {\r\n      let mapChart = this.$echarts.init(\r\n        document.getElementById(\"line_center_diagram\")\r\n      ); //图表初始化，china-map是绑定的元素\r\n      window.onresize = mapChart.resize; //如果容器变大小，自适应从新构图\r\n      let option = {\r\n        xAxis: {\r\n          type: \"category\",\r\n          data: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\r\n          position: \"bottom\",\r\n          axisLine: true,\r\n          axisLabel: {\r\n            color: \"rgba(255,255,255,.8)\",\r\n            fontSize: 12,\r\n          },\r\n        },\r\n        yAxis: {\r\n          type: \"value\",\r\n          name: \"年度生产量\",\r\n          nameLocation: \"end\",\r\n          nameGap: 24,\r\n          nameTextStyle: {\r\n            color: \"rgba(255,255,255,.5)\",\r\n            fontSize: 14,\r\n          },\r\n          splitNumber: 4,\r\n          axisLine: {\r\n            lineStyle: {\r\n              opacity: 0,\r\n            },\r\n          },\r\n          splitLine: {\r\n            show: true,\r\n            lineStyle: {\r\n              color: \"#fff\",\r\n              opacity: 0.1,\r\n            },\r\n          },\r\n          axisLabel: {\r\n            color: \"rgba(255,255,255,.8)\",\r\n            fontSize: 12,\r\n          },\r\n        },\r\n        grid: {\r\n          left: 50,\r\n          right: 10,\r\n          bottom: 25,\r\n          top: \"18%\",\r\n        },\r\n        series: [\r\n          {\r\n            data: [820, 932, 901, 934, 1290, 1330, 1320],\r\n            type: \"line\",\r\n            smooth: true,\r\n            symbol: \"emptyCircle\",\r\n            symbolSize: 8,\r\n            itemStyle: {\r\n              normal: {\r\n                color: \"#fff\",\r\n              },\r\n            },\r\n            //线的颜色样式\r\n            lineStyle: {\r\n              normal: {\r\n                color: this.colorList.linearBtoG,\r\n                width: 3,\r\n              },\r\n            },\r\n            //填充颜色样式\r\n            areaStyle: {\r\n              normal: {\r\n                color: this.colorList.areaBtoG,\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      };\r\n      mapChart.setOption(option); //生成图表\r\n    },\r\n\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n//全局样式部分！！！！\r\n* {\r\n  margin: 0px;\r\n  padding: 0px;\r\n  list-style-type: none;\r\n  outline: none;\r\n  box-sizing: border-box;\r\n}\r\n\r\nhtml {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n// body {\r\n//   font-family: Arial, Helvetica, sans-serif;\r\n//   // line-height: 1.2em;\r\n//   background-color: #f1f1f1;\r\n//   margin: 0;\r\n//   padding: 0;\r\n// }\r\n\r\na {\r\n  color: #343440;\r\n  text-decoration: none;\r\n}\r\n\r\n//--------------------------------------------\r\n\r\n//页面样式部分！！！！\r\n.container {\r\n  color: #d3d6dd;\r\n  max-width: 1700px;\r\n  /* 最大宽度限制为1700px */\r\n  width: 100%;\r\n  /* 初始宽度为100% */\r\n  height: auto;\r\n  /* 高度自适应 */\r\n  margin: 0 auto;\r\n  /* 水平居中 */\r\n  overflow: visible;\r\n  /* 尝试修改 overflow 属性为 visible */\r\n}\r\n\r\n// .container {\r\n//   color: #d3d6dd;\r\n//   width: 100%; /* 初始宽度为100% */\r\n//   max-width: 1700px; /* 最大宽度限制为1700px */\r\n//   height: auto; /* 高度自适应 */\r\n//   position: absolute;\r\n//   top: 50%;\r\n//   left: 50%;\r\n//   transform: translate(-50%, -50%);\r\n//   transform-origin: left top;\r\n//   overflow: visible; /* 尝试修改 overflow 属性为 visible */\r\n// }\r\n\r\n.container-inner {\r\n  width: 50%;\r\n}\r\n\r\n#index {\r\n  color: #d3d6dd;\r\n  width: 1890px;\r\n  height: auto;\r\n  position: absolute;\r\n  top: 49%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  transform-origin: left top;\r\n  overflow: hidden;\r\n\r\n  .bg {\r\n    //整体页面背景\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 16px 16px 0 16px;\r\n    background-image: url(\"../assets/images/background.png\"); //背景图\r\n    background-size: cover; //背景尺寸\r\n    background-position: center center; //背景位置\r\n  }\r\n\r\n  //顶部右边装饰效果\r\n  .title_left {\r\n    width: 100%;\r\n    height: 50px;\r\n  }\r\n\r\n  //顶部左边装饰效果\r\n  .title_right {\r\n    width: 100%;\r\n    height: 50px;\r\n    margin-top: 18px;\r\n  }\r\n\r\n  //顶部中间装饰效果\r\n  .title_center {\r\n    width: 100%;\r\n    height: 5px;\r\n  }\r\n\r\n  //顶部中间陶源生物资产监管系统\r\n  .title_text {\r\n    text-align: center;\r\n    font-size: 24px;\r\n    font-weight: bold;\r\n    margin-top: 30px;\r\n    color: #008cff;\r\n  }\r\n\r\n  //时间日期\r\n  .title_time {\r\n    text-align: center;\r\n  }\r\n\r\n  //中国地图\r\n  #china-map {\r\n    height: 610px;\r\n    width: 100%;\r\n  }\r\n\r\n  //中间折线图\r\n  .line_center {\r\n    width: 100%;\r\n    height: 300px;\r\n  }\r\n\r\n  //左1模块\r\n  .left_box1 {\r\n    height: 300px;\r\n    width: 96%;\r\n    margin-left: 2%;\r\n    margin-bottom: 10px;\r\n    position: relative;\r\n  }\r\n\r\n  //左2模块\r\n  .left_box2 {\r\n    height: 280px;\r\n    width: 96%;\r\n    margin-left: 2%;\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  //左3模块\r\n  .left_box3 {\r\n    height: 300px;\r\n    width: 96%;\r\n    margin-left: 2%;\r\n  }\r\n\r\n  //右1模块\r\n  .right_box1 {\r\n    height: 300px;\r\n    width: 94%;\r\n    margin-left: 2%;\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  //右2模块\r\n  .right_box2 {\r\n    height: 280px;\r\n    width: 94%;\r\n    margin-left: 2%;\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  //右3模块\r\n  .right_box3 {\r\n    height: 300px;\r\n    width: 94%;\r\n    margin-left: 2%;\r\n  }\r\n\r\n  //左1模块-玫瑰饼图\r\n  #Rose_diagram {\r\n    height: 80%;\r\n    width: 55%;\r\n    top: 60px;\r\n  }\r\n\r\n  //左1模块-圆环图\r\n  .left_box1_rose_right {\r\n    height: 85%;\r\n    width: 55%;\r\n    position: absolute;\r\n    right: 0;\r\n    top: 25px;\r\n  }\r\n\r\n  //左1模块-文字部分\r\n  .rose_text {\r\n    display: inline-block;\r\n    margin-top: 4%;\r\n    margin-left: 4%;\r\n  }\r\n\r\n  // 左1模块-￥符号样式\r\n  .coin {\r\n    font-size: 20px;\r\n    color: #ffc107;\r\n  }\r\n\r\n  //左1模块-（件）样式\r\n  .colorYellow {\r\n    color: yellowgreen;\r\n  }\r\n\r\n  //左1模块-数字样式\r\n  .rose_text_nmb {\r\n    font-size: 20px;\r\n    color: #00b891;\r\n  }\r\n\r\n  //左2模块 柱状图\r\n  #columnar {\r\n    height: 97%;\r\n    width: 95%;\r\n    margin-left: 3%;\r\n    margin-top: 10px;\r\n  }\r\n\r\n  //折线图\r\n  #line_center_diagram {\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n\r\n  //轮播表格\r\n  .carousel_list {\r\n    width: 96%;\r\n    height: 98%;\r\n    margin-left: 10px;\r\n  }\r\n\r\n  //虚线柱状图\r\n  #dotter_bar {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  //锥形图\r\n  .cone_box {\r\n    width: 95%;\r\n    height: 97%;\r\n    margin-left: 3%;\r\n  }\r\n}\r\n\r\n//预警信息背景透明\r\n.el-table,\r\n.el-table__expanded-cell,\r\ntr,\r\n.el-table__cell {\r\n  background-color: transparent !important;\r\n}\r\n\r\n/* 在你的样式表中添加自定义样式 */\r\n.custom-border-box {\r\n  border: none;\r\n  /* 移除边框 */\r\n  padding: 10px;\r\n  /* 可选：控制内容与边框的间距 */\r\n  display: inline-block;\r\n  /* 或者使用 display: inline-flex; */\r\n  /* 其他样式 */\r\n}\r\n// .pie-chart-container {\r\n//     width: 200px;\r\n//     height: 200px;\r\n//     margin-right: 200px;\r\n//     margin-bottom: 200px;\r\n//   }\r\n</style>\r\n"]}]}