{"remainingRequest":"D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\@jiaminghi\\data-view\\lib\\components\\scrollBoard\\src\\main.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\@jiaminghi\\data-view\\lib\\components\\scrollBoard\\src\\main.vue","mtime":1713163063689},{"path":"D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\babel.config.js","mtime":1710675411407},{"path":"D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1710867555791},{"path":"D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":1710867556608},{"path":"D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1710867555791},{"path":"D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1710867531387}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["_autoResize","_interopRequireDefault","require","_index","_util","name","mixins","autoResize","props","config","type","Object","default","_default","data","ref","defaultConfig","header","rowNum","headerBGC","oddRowBGC","evenRowBGC","waitTime","headerHeight","columnWidth","align","index","indexHeader","carousel","hoverPause","mergedConfig","rowsData","rows","widths","heights","avgHeight","aligns","animationIndex","animationHandler","updater","needCalc","watch","stopAnimation","calcData","methods","handleHover","enter","ri","ci","row","ceil","emitEvent","animation","afterAutoResizeMixinInit","onResize","calcWidths","calcHeights","mergeConfig","calcHeaderData","calcRowsData","calcAligns","deepMerge","deepClone","_this$mergedConfig","length","_toConsumableArray2","unshift","_this$mergedConfig2","map","i","indexTag","concat","ceils","rowIndex","rowLength","d","_objectSpread2","scroll","width","usedWidth","reduce","all","w","columnNum","avgWidth","Array","fill","onresize","arguments","undefined","height","allHeight","_arguments","_this","_asyncToGenerator2","_regeneratorRuntime2","mark","_callee","_this$heights","start","animationNum","back","wrap","_callee$","_context","prev","next","abrupt","Promise","resolve","setTimeout","slice","push","apply","splice","stop","clearTimeout","$emit","columnIndex","updateRows","destroyed"],"sources":["node_modules/@jiaminghi/data-view/lib/components/scrollBoard/src/main.vue"],"sourcesContent":["<template>\n  <div class=\"dv-scroll-board\" :ref=\"ref\">\n    <div class=\"header\" v-if=\"header.length && mergedConfig\" :style=\"`background-color: ${mergedConfig.headerBGC};`\">\n      <div\n        class=\"header-item\"\n        v-for=\"(headerItem, i) in header\"\n        :key=\"`${headerItem}${i}`\"\n        :style=\"`\n          height: ${mergedConfig.headerHeight}px;\n          line-height: ${mergedConfig.headerHeight}px;\n          width: ${widths[i]}px;\n        `\"\n        :align=\"aligns[i]\"\n        v-html=\"headerItem\"\n      />\n    </div>\n\n    <div\n      v-if=\"mergedConfig\"\n      class=\"rows\"\n      :style=\"`height: ${height - (header.length ? mergedConfig.headerHeight : 0)}px;`\"\n    >\n      <div\n        class=\"row-item\"\n        v-for=\"(row, ri) in rows\"\n        :key=\"`${row.toString()}${row.scroll}`\"\n        :style=\"`\n          height: ${heights[ri]}px;\n          line-height: ${heights[ri]}px;\n          background-color: ${mergedConfig[row.rowIndex % 2 === 0 ? 'evenRowBGC' : 'oddRowBGC']};\n        `\"\n      >\n        <div\n          class=\"ceil\"\n          v-for=\"(ceil, ci) in row.ceils\"\n          :key=\"`${ceil}${ri}${ci}`\"\n          :style=\"`width: ${widths[ci]}px;`\"\n          :align=\"aligns[ci]\"\n          v-html=\"ceil\"\n          @click=\"emitEvent('click', ri, ci, row, ceil)\"\n          @mouseenter=\"handleHover(true, ri, ci, row, ceil)\"\n          @mouseleave=\"handleHover(false)\"\n        />\n\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvScrollBoard',\n  mixins: [autoResize],\n  props: {\n    config: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data () {\n    return {\n      ref: 'scroll-board',\n\n      defaultConfig: {\n        /**\n         * @description Board header\n         * @type {Array<String>}\n         * @default header = []\n         * @example header = ['column1', 'column2', 'column3']\n         */\n        header: [],\n        /**\n         * @description Board data\n         * @type {Array<Array>}\n         * @default data = []\n         */\n        data: [],\n        /**\n         * @description Row num\n         * @type {Number}\n         * @default rowNum = 5\n         */\n        rowNum: 5,\n        /**\n         * @description Header background color\n         * @type {String}\n         * @default headerBGC = '#00BAFF'\n         */\n        headerBGC: '#00BAFF',\n        /**\n         * @description Odd row background color\n         * @type {String}\n         * @default oddRowBGC = '#003B51'\n         */\n        oddRowBGC: '#003B51',\n        /**\n         * @description Even row background color\n         * @type {String}\n         * @default evenRowBGC = '#003B51'\n         */\n        evenRowBGC: '#0A2732',\n        /**\n         * @description Scroll wait time\n         * @type {Number}\n         * @default waitTime = 2000\n         */\n        waitTime: 2000,\n        /**\n         * @description Header height\n         * @type {Number}\n         * @default headerHeight = 35\n         */\n        headerHeight: 35,\n        /**\n         * @description Column width\n         * @type {Array<Number>}\n         * @default columnWidth = []\n         */\n        columnWidth: [],\n        /**\n         * @description Column align\n         * @type {Array<String>}\n         * @default align = []\n         * @example align = ['left', 'center', 'right']\n         */\n        align: [],\n        /**\n         * @description Show index\n         * @type {Boolean}\n         * @default index = false\n         */\n        index: false,\n        /**\n         * @description index Header\n         * @type {String}\n         * @default indexHeader = '#'\n         */\n        indexHeader: '#',\n        /**\n         * @description Carousel type\n         * @type {String}\n         * @default carousel = 'single'\n         * @example carousel = 'single' | 'page'\n         */\n        carousel: 'single',\n        /**\n         * @description Pause scroll when mouse hovered\n         * @type {Boolean}\n         * @default hoverPause = true\n         * @example hoverPause = true | false\n         */\n        hoverPause: true\n      },\n\n      mergedConfig: null,\n\n      header: [],\n\n      rowsData: [],\n\n      rows: [],\n\n      widths: [],\n\n      heights: [],\n\n      avgHeight: 0,\n\n      aligns: [],\n\n      animationIndex: 0,\n\n      animationHandler: '',\n\n      updater: 0,\n\n      needCalc: false\n    }\n  },\n  watch: {\n    config () {\n      const { stopAnimation, calcData } = this\n\n      stopAnimation()\n\n      this.animationIndex = 0\n\n      calcData()\n    }\n  },\n  methods: {\n    handleHover(enter, ri, ci, row, ceil){\n      const { mergedConfig, emitEvent, stopAnimation, animation } = this\n\n      if (enter) emitEvent('mouseover', ri, ci, row, ceil)\n      if (!mergedConfig.hoverPause) return\n\n      if (enter) {\n        stopAnimation()\n      } else {\n        animation(true)\n      }\n    },\n    afterAutoResizeMixinInit () {\n      const { calcData } = this\n\n      calcData()\n    },\n    onResize () {\n      const { mergedConfig, calcWidths, calcHeights } = this\n\n      if (!mergedConfig) return\n\n      calcWidths()\n\n      calcHeights()\n    },\n    calcData () {\n      const { mergeConfig, calcHeaderData, calcRowsData } = this\n\n      mergeConfig()\n\n      calcHeaderData()\n\n      calcRowsData()\n\n      const { calcWidths, calcHeights, calcAligns } = this\n\n      calcWidths()\n\n      calcHeights()\n\n      calcAligns()\n\n      const { animation } = this\n\n      animation(true)\n    },\n    mergeConfig () {\n      let { config, defaultConfig } = this\n\n      this.mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\n    },\n    calcHeaderData () {\n      let { header, index, indexHeader} = this.mergedConfig\n\n      if (!header.length) {\n        this.header = []\n\n        return\n      }\n\n      header = [...header]\n\n      if (index) header.unshift(indexHeader)\n\n      this.header = header\n    },\n    calcRowsData () {\n      let { data, index, headerBGC, rowNum } = this.mergedConfig\n\n      if (index) {\n        data = data.map((row, i) => {\n          row = [...row]\n\n          const indexTag = `<span class=\"index\" style=\"background-color: ${headerBGC};\">${i + 1}</span>`\n\n          row.unshift(indexTag)\n\n          return row\n        })\n      }\n\n      data = data.map((ceils, i) => ({ ceils, rowIndex: i }))\n\n      const rowLength = data.length\n\n      if (rowLength > rowNum && rowLength < 2 * rowNum) {\n        data = [...data, ...data]\n      }\n\n      data = data.map((d, i) => ({ ...d, scroll: i }))\n\n      this.rowsData = data\n      this.rows = data\n    },\n    calcWidths () {\n      const { width, mergedConfig, rowsData } = this\n\n      const { columnWidth, header } = mergedConfig\n\n      const usedWidth = columnWidth.reduce((all, w) => all + w, 0)\n\n      let columnNum = 0\n      if (rowsData[0]) {\n        columnNum = rowsData[0].ceils.length\n      } else if (header.length) {\n        columnNum = header.length\n      }\n\n      const avgWidth = (width - usedWidth) / (columnNum - columnWidth.length)\n\n      const widths = new Array(columnNum).fill(avgWidth)\n\n      this.widths = deepMerge(widths, columnWidth)\n    },\n    calcHeights (onresize = false) {\n      const { height, mergedConfig, header } = this\n\n      const { headerHeight, rowNum, data } = mergedConfig\n\n      let allHeight = height\n\n      if (header.length) allHeight -= headerHeight\n\n      const avgHeight = allHeight / rowNum\n\n      this.avgHeight = avgHeight\n\n      if (!onresize) this.heights = new Array(data.length).fill(avgHeight)\n    },\n    calcAligns () {\n      const { header, mergedConfig } = this\n\n      const columnNum = header.length\n\n      let aligns = new Array(columnNum).fill('left')\n\n      const { align } = mergedConfig\n\n      this.aligns = deepMerge(aligns, align)\n    },\n    async animation (start = false) {\n      const { needCalc, calcHeights, calcRowsData } = this\n\n      if (needCalc) {\n        calcRowsData()\n        calcHeights()\n        this.needCalc = false\n      }\n\n      let { avgHeight, animationIndex, mergedConfig, rowsData, animation, updater } = this\n\n      const { waitTime, carousel, rowNum } = mergedConfig\n\n      const rowLength = rowsData.length\n\n      if (rowNum >= rowLength) return\n\n      if (start) {\n        await new Promise(resolve => setTimeout(resolve, waitTime))\n        if (updater !== this.updater) return\n      }\n\n      const animationNum = carousel === 'single' ? 1 : rowNum\n\n      let rows = rowsData.slice(animationIndex)\n      rows.push(...rowsData.slice(0, animationIndex))\n\n      this.rows = rows.slice(0, carousel === 'page' ? rowNum * 2 : rowNum + 1)\n      this.heights = new Array(rowLength).fill(avgHeight)\n\n      await new Promise(resolve => setTimeout(resolve, 300))\n      if (updater !== this.updater) return\n\n      this.heights.splice(0, animationNum, ...new Array(animationNum).fill(0))\n\n      animationIndex += animationNum\n\n      const back = animationIndex - rowLength\n      if (back >= 0) animationIndex = back\n\n      this.animationIndex = animationIndex\n      this.animationHandler = setTimeout(animation, waitTime - 300)\n    },\n    stopAnimation () {\n      const { animationHandler, updater } = this\n\n      this.updater = (updater + 1) % 999999\n\n      if (!animationHandler) return\n\n      clearTimeout(animationHandler)\n    },\n    emitEvent (type, ri, ci, row, ceil) {\n      const { ceils, rowIndex } = row\n\n      this.$emit(type, {\n        row: ceils,\n        ceil,\n        rowIndex,\n        columnIndex: ci\n      })\n    },\n    updateRows(rows, animationIndex) {\n      const { mergedConfig, animationHandler, animation } = this\n\n      this.mergedConfig = {\n        ...mergedConfig,\n        data: [...rows]\n      }\n\n      this.needCalc = true\n\n      if (typeof animationIndex === 'number') this.animationIndex = animationIndex\n      if (!animationHandler) animation(true)\n    }\n  },\n  destroyed () {\n    const { stopAnimation } = this\n\n    stopAnimation()\n  }\n}\n</script>"],"mappings":";;;;;;;;;;;;;;;;;;;AAkDA,IAAAA,WAAA,GAAAC,sBAAA,CAAAC,OAAA;AAEA,IAAAC,MAAA,GAAAD,OAAA;AAEA,IAAAE,KAAA,GAAAF,OAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAEA;EACAG,IAAA;EACAC,MAAA,GAAAC,mBAAA;EACAC,KAAA;IACAC,MAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA,WAAAC,SAAA;QAAA;MAAA;IACA;EACA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,GAAA;MAEAC,aAAA;QACA;AACA;AACA;AACA;AACA;AACA;QACAC,MAAA;QACA;AACA;AACA;AACA;AACA;QACAH,IAAA;QACA;AACA;AACA;AACA;AACA;QACAI,MAAA;QACA;AACA;AACA;AACA;AACA;QACAC,SAAA;QACA;AACA;AACA;AACA;AACA;QACAC,SAAA;QACA;AACA;AACA;AACA;AACA;QACAC,UAAA;QACA;AACA;AACA;AACA;AACA;QACAC,QAAA;QACA;AACA;AACA;AACA;AACA;QACAC,YAAA;QACA;AACA;AACA;AACA;AACA;QACAC,WAAA;QACA;AACA;AACA;AACA;AACA;AACA;QACAC,KAAA;QACA;AACA;AACA;AACA;AACA;QACAC,KAAA;QACA;AACA;AACA;AACA;AACA;QACAC,WAAA;QACA;AACA;AACA;AACA;AACA;AACA;QACAC,QAAA;QACA;AACA;AACA;AACA;AACA;AACA;QACAC,UAAA;MACA;MAEAC,YAAA;MAEAb,MAAA;MAEAc,QAAA;MAEAC,IAAA;MAEAC,MAAA;MAEAC,OAAA;MAEAC,SAAA;MAEAC,MAAA;MAEAC,cAAA;MAEAC,gBAAA;MAEAC,OAAA;MAEAC,QAAA;IACA;EACA;EACAC,KAAA;IACAhC,MAAA,WAAAA,OAAA;MACA,IAAAiC,aAAA,QAAAA,aAAA;QAAAC,QAAA,QAAAA,QAAA;MAEAD,aAAA;MAEA,KAAAL,cAAA;MAEAM,QAAA;IACA;EACA;EACAC,OAAA;IACAC,WAAA,WAAAA,YAAAC,KAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,GAAA,EAAAC,IAAA;MACA,IAAApB,YAAA,QAAAA,YAAA;QAAAqB,SAAA,QAAAA,SAAA;QAAAT,aAAA,QAAAA,aAAA;QAAAU,SAAA,QAAAA,SAAA;MAEA,IAAAN,KAAA,EAAAK,SAAA,cAAAJ,EAAA,EAAAC,EAAA,EAAAC,GAAA,EAAAC,IAAA;MACA,KAAApB,YAAA,CAAAD,UAAA;MAEA,IAAAiB,KAAA;QACAJ,aAAA;MACA;QACAU,SAAA;MACA;IACA;IACAC,wBAAA,WAAAA,yBAAA;MACA,IAAAV,QAAA,QAAAA,QAAA;MAEAA,QAAA;IACA;IACAW,QAAA,WAAAA,SAAA;MACA,IAAAxB,YAAA,QAAAA,YAAA;QAAAyB,UAAA,QAAAA,UAAA;QAAAC,WAAA,QAAAA,WAAA;MAEA,KAAA1B,YAAA;MAEAyB,UAAA;MAEAC,WAAA;IACA;IACAb,QAAA,WAAAA,SAAA;MACA,IAAAc,WAAA,QAAAA,WAAA;QAAAC,cAAA,QAAAA,cAAA;QAAAC,YAAA,QAAAA,YAAA;MAEAF,WAAA;MAEAC,cAAA;MAEAC,YAAA;MAEA,IAAAJ,UAAA,QAAAA,UAAA;QAAAC,WAAA,QAAAA,WAAA;QAAAI,UAAA,QAAAA,UAAA;MAEAL,UAAA;MAEAC,WAAA;MAEAI,UAAA;MAEA,IAAAR,SAAA,QAAAA,SAAA;MAEAA,SAAA;IACA;IACAK,WAAA,WAAAA,YAAA;MACA,IAAAhD,MAAA,QAAAA,MAAA;QAAAO,aAAA,QAAAA,aAAA;MAEA,KAAAc,YAAA,OAAA+B,gBAAA,MAAAC,eAAA,EAAA9C,aAAA,SAAAP,MAAA;IACA;IACAiD,cAAA,WAAAA,eAAA;MACA,IAAAK,kBAAA,QAAAjC,YAAA;QAAAb,MAAA,GAAA8C,kBAAA,CAAA9C,MAAA;QAAAS,KAAA,GAAAqC,kBAAA,CAAArC,KAAA;QAAAC,WAAA,GAAAoC,kBAAA,CAAApC,WAAA;MAEA,KAAAV,MAAA,CAAA+C,MAAA;QACA,KAAA/C,MAAA;QAEA;MACA;MAEAA,MAAA,OAAAgD,mBAAA,CAAArD,OAAA,EAAAK,MAAA;MAEA,IAAAS,KAAA,EAAAT,MAAA,CAAAiD,OAAA,CAAAvC,WAAA;MAEA,KAAAV,MAAA,GAAAA,MAAA;IACA;IACA0C,YAAA,WAAAA,aAAA;MACA,IAAAQ,mBAAA,QAAArC,YAAA;QAAAhB,IAAA,GAAAqD,mBAAA,CAAArD,IAAA;QAAAY,KAAA,GAAAyC,mBAAA,CAAAzC,KAAA;QAAAP,SAAA,GAAAgD,mBAAA,CAAAhD,SAAA;QAAAD,MAAA,GAAAiD,mBAAA,CAAAjD,MAAA;MAEA,IAAAQ,KAAA;QACAZ,IAAA,GAAAA,IAAA,CAAAsD,GAAA,WAAAnB,GAAA,EAAAoB,CAAA;UACApB,GAAA,OAAAgB,mBAAA,CAAArD,OAAA,EAAAqC,GAAA;UAEA,IAAAqB,QAAA,sDAAAC,MAAA,CAAApD,SAAA,UAAAoD,MAAA,CAAAF,CAAA;UAEApB,GAAA,CAAAiB,OAAA,CAAAI,QAAA;UAEA,OAAArB,GAAA;QACA;MACA;MAEAnC,IAAA,GAAAA,IAAA,CAAAsD,GAAA,WAAAI,KAAA,EAAAH,CAAA;QAAA;UAAAG,KAAA,EAAAA,KAAA;UAAAC,QAAA,EAAAJ;QAAA;MAAA;MAEA,IAAAK,SAAA,GAAA5D,IAAA,CAAAkD,MAAA;MAEA,IAAAU,SAAA,GAAAxD,MAAA,IAAAwD,SAAA,OAAAxD,MAAA;QACAJ,IAAA,MAAAyD,MAAA,KAAAN,mBAAA,CAAArD,OAAA,EAAAE,IAAA,OAAAmD,mBAAA,CAAArD,OAAA,EAAAE,IAAA;MACA;MAEAA,IAAA,GAAAA,IAAA,CAAAsD,GAAA,WAAAO,CAAA,EAAAN,CAAA;QAAA,WAAAO,cAAA,CAAAhE,OAAA,MAAAgE,cAAA,CAAAhE,OAAA,MAAA+D,CAAA;UAAAE,MAAA,EAAAR;QAAA;MAAA;MAEA,KAAAtC,QAAA,GAAAjB,IAAA;MACA,KAAAkB,IAAA,GAAAlB,IAAA;IACA;IACAyC,UAAA,WAAAA,WAAA;MACA,IAAAuB,KAAA,QAAAA,KAAA;QAAAhD,YAAA,QAAAA,YAAA;QAAAC,QAAA,QAAAA,QAAA;MAEA,IAAAP,WAAA,GAAAM,YAAA,CAAAN,WAAA;QAAAP,MAAA,GAAAa,YAAA,CAAAb,MAAA;MAEA,IAAA8D,SAAA,GAAAvD,WAAA,CAAAwD,MAAA,WAAAC,GAAA,EAAAC,CAAA;QAAA,OAAAD,GAAA,GAAAC,CAAA;MAAA;MAEA,IAAAC,SAAA;MACA,IAAApD,QAAA;QACAoD,SAAA,GAAApD,QAAA,IAAAyC,KAAA,CAAAR,MAAA;MACA,WAAA/C,MAAA,CAAA+C,MAAA;QACAmB,SAAA,GAAAlE,MAAA,CAAA+C,MAAA;MACA;MAEA,IAAAoB,QAAA,IAAAN,KAAA,GAAAC,SAAA,KAAAI,SAAA,GAAA3D,WAAA,CAAAwC,MAAA;MAEA,IAAA/B,MAAA,OAAAoD,KAAA,CAAAF,SAAA,EAAAG,IAAA,CAAAF,QAAA;MAEA,KAAAnD,MAAA,OAAA4B,gBAAA,EAAA5B,MAAA,EAAAT,WAAA;IACA;IACAgC,WAAA,WAAAA,YAAA;MAAA,IAAA+B,QAAA,GAAAC,SAAA,CAAAxB,MAAA,QAAAwB,SAAA,QAAAC,SAAA,GAAAD,SAAA;MACA,IAAAE,MAAA,QAAAA,MAAA;QAAA5D,YAAA,QAAAA,YAAA;QAAAb,MAAA,QAAAA,MAAA;MAEA,IAAAM,YAAA,GAAAO,YAAA,CAAAP,YAAA;QAAAL,MAAA,GAAAY,YAAA,CAAAZ,MAAA;QAAAJ,IAAA,GAAAgB,YAAA,CAAAhB,IAAA;MAEA,IAAA6E,SAAA,GAAAD,MAAA;MAEA,IAAAzE,MAAA,CAAA+C,MAAA,EAAA2B,SAAA,IAAApE,YAAA;MAEA,IAAAY,SAAA,GAAAwD,SAAA,GAAAzE,MAAA;MAEA,KAAAiB,SAAA,GAAAA,SAAA;MAEA,KAAAoD,QAAA,OAAArD,OAAA,OAAAmD,KAAA,CAAAvE,IAAA,CAAAkD,MAAA,EAAAsB,IAAA,CAAAnD,SAAA;IACA;IACAyB,UAAA,WAAAA,WAAA;MACA,IAAA3C,MAAA,QAAAA,MAAA;QAAAa,YAAA,QAAAA,YAAA;MAEA,IAAAqD,SAAA,GAAAlE,MAAA,CAAA+C,MAAA;MAEA,IAAA5B,MAAA,OAAAiD,KAAA,CAAAF,SAAA,EAAAG,IAAA;MAEA,IAAA7D,KAAA,GAAAK,YAAA,CAAAL,KAAA;MAEA,KAAAW,MAAA,OAAAyB,gBAAA,EAAAzB,MAAA,EAAAX,KAAA;IACA;IACA2B,SAAA,WAAAA,UAAA;MAAA,IAAAwC,UAAA,GAAAJ,SAAA;QAAAK,KAAA;MAAA,WAAAC,kBAAA,CAAAlF,OAAA,oBAAAmF,oBAAA,CAAAnF,OAAA,IAAAoF,IAAA,UAAAC,QAAA;QAAA,IAAAC,aAAA;QAAA,IAAAC,KAAA,EAAA3D,QAAA,EAAAgB,WAAA,EAAAG,YAAA,EAAAxB,SAAA,EAAAE,cAAA,EAAAP,YAAA,EAAAC,QAAA,EAAAqB,SAAA,EAAAb,OAAA,EAAAjB,QAAA,EAAAM,QAAA,EAAAV,MAAA,EAAAwD,SAAA,EAAA0B,YAAA,EAAApE,IAAA,EAAAqE,IAAA;QAAA,WAAAN,oBAAA,CAAAnF,OAAA,IAAA0F,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAP,KAAA,GAAAP,UAAA,CAAA5B,MAAA,QAAA4B,UAAA,QAAAH,SAAA,GAAAG,UAAA;cACApD,QAAA,GAAAqD,KAAA,CAAArD,QAAA,EAAAgB,WAAA,GAAAqC,KAAA,CAAArC,WAAA,EAAAG,YAAA,GAAAkC,KAAA,CAAAlC,YAAA;cAEA,IAAAnB,QAAA;gBACAmB,YAAA;gBACAH,WAAA;gBACAqC,KAAA,CAAArD,QAAA;cACA;cAEAL,SAAA,GAAA0D,KAAA,CAAA1D,SAAA,EAAAE,cAAA,GAAAwD,KAAA,CAAAxD,cAAA,EAAAP,YAAA,GAAA+D,KAAA,CAAA/D,YAAA,EAAAC,QAAA,GAAA8D,KAAA,CAAA9D,QAAA,EAAAqB,SAAA,GAAAyC,KAAA,CAAAzC,SAAA,EAAAb,OAAA,GAAAsD,KAAA,CAAAtD,OAAA;cAEAjB,QAAA,GAAAQ,YAAA,CAAAR,QAAA,EAAAM,QAAA,GAAAE,YAAA,CAAAF,QAAA,EAAAV,MAAA,GAAAY,YAAA,CAAAZ,MAAA;cAEAwD,SAAA,GAAA3C,QAAA,CAAAiC,MAAA;cAAA,MAEA9C,MAAA,IAAAwD,SAAA;gBAAA8B,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAA,OAAAF,QAAA,CAAAG,MAAA;YAAA;cAAA,KAEAR,KAAA;gBAAAK,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OACA,IAAAE,OAAA,WAAAC,OAAA;gBAAA,OAAAC,UAAA,CAAAD,OAAA,EAAAvF,QAAA;cAAA;YAAA;cAAA,MACAiB,OAAA,KAAAsD,KAAA,CAAAtD,OAAA;gBAAAiE,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAA,OAAAF,QAAA,CAAAG,MAAA;YAAA;cAGAP,YAAA,GAAAxE,QAAA,oBAAAV,MAAA;cAEAc,IAAA,GAAAD,QAAA,CAAAgF,KAAA,CAAA1E,cAAA;cACAL,IAAA,CAAAgF,IAAA,CAAAC,KAAA,CAAAjF,IAAA,MAAAiC,mBAAA,CAAArD,OAAA,EAAAmB,QAAA,CAAAgF,KAAA,IAAA1E,cAAA;cAEAwD,KAAA,CAAA7D,IAAA,GAAAA,IAAA,CAAA+E,KAAA,IAAAnF,QAAA,cAAAV,MAAA,OAAAA,MAAA;cACA2E,KAAA,CAAA3D,OAAA,OAAAmD,KAAA,CAAAX,SAAA,EAAAY,IAAA,CAAAnD,SAAA;cAAAqE,QAAA,CAAAE,IAAA;cAAA,OAEA,IAAAE,OAAA,WAAAC,OAAA;gBAAA,OAAAC,UAAA,CAAAD,OAAA;cAAA;YAAA;cAAA,MACAtE,OAAA,KAAAsD,KAAA,CAAAtD,OAAA;gBAAAiE,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAA,OAAAF,QAAA,CAAAG,MAAA;YAAA;cAEA,CAAAT,aAAA,GAAAL,KAAA,CAAA3D,OAAA,EAAAgF,MAAA,CAAAD,KAAA,CAAAf,aAAA,MAAAE,YAAA,EAAA7B,MAAA,KAAAN,mBAAA,CAAArD,OAAA,MAAAyE,KAAA,CAAAe,YAAA,EAAAd,IAAA;cAEAjD,cAAA,IAAA+D,YAAA;cAEAC,IAAA,GAAAhE,cAAA,GAAAqC,SAAA;cACA,IAAA2B,IAAA,OAAAhE,cAAA,GAAAgE,IAAA;cAEAR,KAAA,CAAAxD,cAAA,GAAAA,cAAA;cACAwD,KAAA,CAAAvD,gBAAA,GAAAwE,UAAA,CAAA1D,SAAA,EAAA9B,QAAA;YAAA;YAAA;cAAA,OAAAkF,QAAA,CAAAW,IAAA;UAAA;QAAA,GAAAlB,OAAA;MAAA;IACA;IACAvD,aAAA,WAAAA,cAAA;MACA,IAAAJ,gBAAA,QAAAA,gBAAA;QAAAC,OAAA,QAAAA,OAAA;MAEA,KAAAA,OAAA,IAAAA,OAAA;MAEA,KAAAD,gBAAA;MAEA8E,YAAA,CAAA9E,gBAAA;IACA;IACAa,SAAA,WAAAA,UAAAzC,IAAA,EAAAqC,EAAA,EAAAC,EAAA,EAAAC,GAAA,EAAAC,IAAA;MACA,IAAAsB,KAAA,GAAAvB,GAAA,CAAAuB,KAAA;QAAAC,QAAA,GAAAxB,GAAA,CAAAwB,QAAA;MAEA,KAAA4C,KAAA,CAAA3G,IAAA;QACAuC,GAAA,EAAAuB,KAAA;QACAtB,IAAA,EAAAA,IAAA;QACAuB,QAAA,EAAAA,QAAA;QACA6C,WAAA,EAAAtE;MACA;IACA;IACAuE,UAAA,WAAAA,WAAAvF,IAAA,EAAAK,cAAA;MACA,IAAAP,YAAA,QAAAA,YAAA;QAAAQ,gBAAA,QAAAA,gBAAA;QAAAc,SAAA,QAAAA,SAAA;MAEA,KAAAtB,YAAA,OAAA8C,cAAA,CAAAhE,OAAA,MAAAgE,cAAA,CAAAhE,OAAA,MACAkB,YAAA;QACAhB,IAAA,MAAAmD,mBAAA,CAAArD,OAAA,EAAAoB,IAAA;MAAA,EACA;MAEA,KAAAQ,QAAA;MAEA,WAAAH,cAAA,oBAAAA,cAAA,GAAAA,cAAA;MACA,KAAAC,gBAAA,EAAAc,SAAA;IACA;EACA;EACAoE,SAAA,WAAAA,UAAA;IACA,IAAA9E,aAAA,QAAAA,aAAA;IAEAA,aAAA;EACA;AACA","ignoreList":[]}]}