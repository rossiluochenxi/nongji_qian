{"remainingRequest":"D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\@jiaminghi\\data-view\\lib\\components\\decoration5\\src\\main.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\@jiaminghi\\data-view\\lib\\components\\decoration5\\src\\main.vue","mtime":1713163063674},{"path":"D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\babel.config.js","mtime":1710675411407},{"path":"D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1710867555791},{"path":"D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":1710867556608},{"path":"D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1710867555791},{"path":"D:\\taoserver\\platform\\taoyuan_qian\\ruoyi-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1710867531387}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCJEOi90YW9zZXJ2ZXIvcGxhdGZvcm0vdGFveXVhbl9xaWFuL3J1b3lpLXVpL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdC5qcyIpLmRlZmF1bHQ7Ck9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbi5qcyIpOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IuanMiKTsKdmFyIF9hdXRvUmVzaXplID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIuLi8uLi8uLi9taXhpbi9hdXRvUmVzaXplIikpOwp2YXIgX3V0aWwgPSByZXF1aXJlKCJAamlhbWluZ2hpL2NoYXJ0cy9saWIvdXRpbCIpOwp2YXIgX2luZGV4ID0gcmVxdWlyZSgiQGppYW1pbmdoaS9jaGFydHMvbGliL3V0aWwvaW5kZXgiKTsKdmFyIF91dGlsMiA9IHJlcXVpcmUoIkBqaWFtaW5naGkvYy1yZW5kZXIvbGliL3BsdWdpbi91dGlsIik7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCnZhciBfZGVmYXVsdDIgPSBleHBvcnRzLmRlZmF1bHQgPSB7CiAgbmFtZTogJ0R2RGVjb3JhdGlvbjUnLAogIG1peGluczogW19hdXRvUmVzaXplLmRlZmF1bHRdLAogIHByb3BzOiB7CiAgICBjb2xvcjogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIFtdOwogICAgICB9CiAgICB9LAogICAgZHVyOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogMS4yCiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcmVmOiAnZGVjb3JhdGlvbi01JywKICAgICAgbGluZTFQb2ludHM6ICcnLAogICAgICBsaW5lMlBvaW50czogJycsCiAgICAgIGxpbmUxTGVuZ3RoOiAwLAogICAgICBsaW5lMkxlbmd0aDogMCwKICAgICAgZGVmYXVsdENvbG9yOiBbJyMzZjk2YTUnLCAnIzNmOTZhNSddLAogICAgICBtZXJnZWRDb2xvcjogW10KICAgIH07CiAgfSwKICB3YXRjaDogewogICAgY29sb3I6IGZ1bmN0aW9uIGNvbG9yKCkgewogICAgICB2YXIgbWVyZ2VDb2xvciA9IHRoaXMubWVyZ2VDb2xvcjsKICAgICAgbWVyZ2VDb2xvcigpOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgYWZ0ZXJBdXRvUmVzaXplTWl4aW5Jbml0OiBmdW5jdGlvbiBhZnRlckF1dG9SZXNpemVNaXhpbkluaXQoKSB7CiAgICAgIHZhciBjYWxjU1ZHRGF0YSA9IHRoaXMuY2FsY1NWR0RhdGE7CiAgICAgIGNhbGNTVkdEYXRhKCk7CiAgICB9LAogICAgY2FsY1NWR0RhdGE6IGZ1bmN0aW9uIGNhbGNTVkdEYXRhKCkgewogICAgICB2YXIgd2lkdGggPSB0aGlzLndpZHRoLAogICAgICAgIGhlaWdodCA9IHRoaXMuaGVpZ2h0OwogICAgICB2YXIgbGluZTFQb2ludHMgPSBbWzAsIGhlaWdodCAqIDAuMl0sIFt3aWR0aCAqIDAuMTgsIGhlaWdodCAqIDAuMl0sIFt3aWR0aCAqIDAuMiwgaGVpZ2h0ICogMC40XSwgW3dpZHRoICogMC4yNSwgaGVpZ2h0ICogMC40XSwgW3dpZHRoICogMC4yNywgaGVpZ2h0ICogMC42XSwgW3dpZHRoICogMC43MiwgaGVpZ2h0ICogMC42XSwgW3dpZHRoICogMC43NSwgaGVpZ2h0ICogMC40XSwgW3dpZHRoICogMC44LCBoZWlnaHQgKiAwLjRdLCBbd2lkdGggKiAwLjgyLCBoZWlnaHQgKiAwLjJdLCBbd2lkdGgsIGhlaWdodCAqIDAuMl1dOwogICAgICB2YXIgbGluZTJQb2ludHMgPSBbW3dpZHRoICogMC4zLCBoZWlnaHQgKiAwLjhdLCBbd2lkdGggKiAwLjcsIGhlaWdodCAqIDAuOF1dOwogICAgICB2YXIgbGluZTFMZW5ndGggPSAoMCwgX3V0aWwuZ2V0UG9seWxpbmVMZW5ndGgpKGxpbmUxUG9pbnRzKTsKICAgICAgdmFyIGxpbmUyTGVuZ3RoID0gKDAsIF91dGlsLmdldFBvbHlsaW5lTGVuZ3RoKShsaW5lMlBvaW50cyk7CiAgICAgIGxpbmUxUG9pbnRzID0gbGluZTFQb2ludHMubWFwKGZ1bmN0aW9uIChwb2ludCkgewogICAgICAgIHJldHVybiBwb2ludC5qb2luKCcsJyk7CiAgICAgIH0pLmpvaW4oJyAnKTsKICAgICAgbGluZTJQb2ludHMgPSBsaW5lMlBvaW50cy5tYXAoZnVuY3Rpb24gKHBvaW50KSB7CiAgICAgICAgcmV0dXJuIHBvaW50LmpvaW4oJywnKTsKICAgICAgfSkuam9pbignICcpOwogICAgICB0aGlzLmxpbmUxUG9pbnRzID0gbGluZTFQb2ludHM7CiAgICAgIHRoaXMubGluZTJQb2ludHMgPSBsaW5lMlBvaW50czsKICAgICAgdGhpcy5saW5lMUxlbmd0aCA9IGxpbmUxTGVuZ3RoOwogICAgICB0aGlzLmxpbmUyTGVuZ3RoID0gbGluZTJMZW5ndGg7CiAgICB9LAogICAgb25SZXNpemU6IGZ1bmN0aW9uIG9uUmVzaXplKCkgewogICAgICB2YXIgY2FsY1NWR0RhdGEgPSB0aGlzLmNhbGNTVkdEYXRhOwogICAgICBjYWxjU1ZHRGF0YSgpOwogICAgfSwKICAgIG1lcmdlQ29sb3I6IGZ1bmN0aW9uIG1lcmdlQ29sb3IoKSB7CiAgICAgIHZhciBjb2xvciA9IHRoaXMuY29sb3IsCiAgICAgICAgZGVmYXVsdENvbG9yID0gdGhpcy5kZWZhdWx0Q29sb3I7CiAgICAgIHRoaXMubWVyZ2VkQ29sb3IgPSAoMCwgX2luZGV4LmRlZXBNZXJnZSkoKDAsIF91dGlsMi5kZWVwQ2xvbmUpKGRlZmF1bHRDb2xvciwgdHJ1ZSksIGNvbG9yIHx8IFtdKTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgbWVyZ2VDb2xvciA9IHRoaXMubWVyZ2VDb2xvcjsKICAgIG1lcmdlQ29sb3IoKTsKICB9Cn07"},{"version":3,"names":["_autoResize","_interopRequireDefault","require","_util","_index","_util2","name","mixins","autoResize","props","color","type","Array","default","_default","dur","Number","data","ref","line1Points","line2Points","line1Length","line2Length","defaultColor","mergedColor","watch","mergeColor","methods","afterAutoResizeMixinInit","calcSVGData","width","height","getPolylineLength","map","point","join","onResize","deepMerge","deepClone","mounted"],"sources":["node_modules/@jiaminghi/data-view/lib/components/decoration5/src/main.vue"],"sourcesContent":["<template>\n  <div class=\"dv-decoration-5\" :ref=\"ref\">\n    <svg :width=\"width\" :height=\"height\">\n      <polyline\n        fill=\"transparent\"\n        :stroke=\"mergedColor[0]\"\n        stroke-width=\"3\"\n        :points=\"line1Points\"\n      >\n        <animate\n          attributeName=\"stroke-dasharray\"\n          attributeType=\"XML\"\n          :from=\"`0, ${line1Length / 2}, 0, ${line1Length / 2}`\"\n          :to=\"`0, 0, ${line1Length}, 0`\"\n          :dur=\"`${dur}s`\"\n          begin=\"0s\"\n          calcMode=\"spline\"\n          keyTimes=\"0;1\"\n          keySplines=\"0.4,1,0.49,0.98\"\n          repeatCount=\"indefinite\"\n        />\n      </polyline>\n      <polyline\n        fill=\"transparent\"\n        :stroke=\"mergedColor[1]\"\n        stroke-width=\"2\"\n        :points=\"line2Points\"\n      >\n        <animate\n          attributeName=\"stroke-dasharray\"\n          attributeType=\"XML\"\n          :from=\"`0, ${line2Length / 2}, 0, ${line2Length / 2}`\"\n          :to=\"`0, 0, ${line2Length}, 0`\"\n          :dur=\"`${dur}s`\"\n          begin=\"0s\"\n          calcMode=\"spline\"\n          keyTimes=\"0;1\"\n          keySplines=\".4,1,.49,.98\"\n          repeatCount=\"indefinite\"\n        />\n      </polyline>\n    </svg>\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize'\n\nimport { getPolylineLength } from '@jiaminghi/charts/lib/util'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvDecoration5',\n  mixins: [autoResize],\n  props: {\n    color: {\n      type: Array,\n      default: () => ([])\n    },\n    dur: {\n      type: Number,\n      default: 1.2\n    }\n  },\n  data () {\n    return {\n      ref: 'decoration-5',\n\n      line1Points: '',\n      line2Points: '',\n\n      line1Length: 0,\n      line2Length: 0,\n\n      defaultColor: ['#3f96a5', '#3f96a5'],\n\n      mergedColor: []\n    }\n  },\n  watch: {\n    color () {\n      const { mergeColor } = this\n\n      mergeColor()\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit () {\n      const { calcSVGData } = this\n\n      calcSVGData()\n    },\n    calcSVGData () {\n      const { width, height } = this\n\n      let line1Points = [\n        [0, height * 0.2], [width * 0.18, height * 0.2], [width * 0.2, height * 0.4], [width * 0.25, height * 0.4],\n        [width * 0.27, height * 0.6], [width * 0.72, height * 0.6], [width * 0.75, height * 0.4],\n        [width * 0.8, height * 0.4], [width * 0.82, height * 0.2], [width, height * 0.2]\n      ]\n\n      let line2Points = [\n        [width * 0.3, height * 0.8], [width * 0.7, height * 0.8]\n      ]\n\n      const line1Length = getPolylineLength(line1Points)\n      const line2Length = getPolylineLength(line2Points)\n\n      line1Points = line1Points.map(point => point.join(',')).join(' ')\n      line2Points = line2Points.map(point => point.join(',')).join(' ')\n\n      this.line1Points = line1Points\n      this.line2Points = line2Points\n\n      this.line1Length = line1Length\n      this.line2Length = line2Length\n    },\n    onResize () {\n      const { calcSVGData } = this\n\n      calcSVGData()\n    },\n    mergeColor () {\n      const { color, defaultColor } = this\n\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\n    }\n  },\n  mounted () {\n    const { mergeColor } = this\n\n    mergeColor()\n  }\n}\n</script>"],"mappings":";;;;;;;;;;AA8CA,IAAAA,WAAA,GAAAC,sBAAA,CAAAC,OAAA;AAEA,IAAAC,KAAA,GAAAD,OAAA;AAEA,IAAAE,MAAA,GAAAF,OAAA;AAEA,IAAAG,MAAA,GAAAH,OAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAEA;EACAI,IAAA;EACAC,MAAA,GAAAC,mBAAA;EACAC,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,KAAA;MACAC,OAAA,WAAAC,SAAA;QAAA;MAAA;IACA;IACAC,GAAA;MACAJ,IAAA,EAAAK,MAAA;MACAH,OAAA;IACA;EACA;EACAI,IAAA,WAAAA,KAAA;IACA;MACAC,GAAA;MAEAC,WAAA;MACAC,WAAA;MAEAC,WAAA;MACAC,WAAA;MAEAC,YAAA;MAEAC,WAAA;IACA;EACA;EACAC,KAAA;IACAf,KAAA,WAAAA,MAAA;MACA,IAAAgB,UAAA,QAAAA,UAAA;MAEAA,UAAA;IACA;EACA;EACAC,OAAA;IACAC,wBAAA,WAAAA,yBAAA;MACA,IAAAC,WAAA,QAAAA,WAAA;MAEAA,WAAA;IACA;IACAA,WAAA,WAAAA,YAAA;MACA,IAAAC,KAAA,QAAAA,KAAA;QAAAC,MAAA,QAAAA,MAAA;MAEA,IAAAZ,WAAA,IACA,IAAAY,MAAA,UAAAD,KAAA,SAAAC,MAAA,UAAAD,KAAA,QAAAC,MAAA,UAAAD,KAAA,SAAAC,MAAA,SACA,CAAAD,KAAA,SAAAC,MAAA,UAAAD,KAAA,SAAAC,MAAA,UAAAD,KAAA,SAAAC,MAAA,SACA,CAAAD,KAAA,QAAAC,MAAA,UAAAD,KAAA,SAAAC,MAAA,UAAAD,KAAA,EAAAC,MAAA,QACA;MAEA,IAAAX,WAAA,IACA,CAAAU,KAAA,QAAAC,MAAA,UAAAD,KAAA,QAAAC,MAAA,QACA;MAEA,IAAAV,WAAA,OAAAW,uBAAA,EAAAb,WAAA;MACA,IAAAG,WAAA,OAAAU,uBAAA,EAAAZ,WAAA;MAEAD,WAAA,GAAAA,WAAA,CAAAc,GAAA,WAAAC,KAAA;QAAA,OAAAA,KAAA,CAAAC,IAAA;MAAA,GAAAA,IAAA;MACAf,WAAA,GAAAA,WAAA,CAAAa,GAAA,WAAAC,KAAA;QAAA,OAAAA,KAAA,CAAAC,IAAA;MAAA,GAAAA,IAAA;MAEA,KAAAhB,WAAA,GAAAA,WAAA;MACA,KAAAC,WAAA,GAAAA,WAAA;MAEA,KAAAC,WAAA,GAAAA,WAAA;MACA,KAAAC,WAAA,GAAAA,WAAA;IACA;IACAc,QAAA,WAAAA,SAAA;MACA,IAAAP,WAAA,QAAAA,WAAA;MAEAA,WAAA;IACA;IACAH,UAAA,WAAAA,WAAA;MACA,IAAAhB,KAAA,QAAAA,KAAA;QAAAa,YAAA,QAAAA,YAAA;MAEA,KAAAC,WAAA,OAAAa,gBAAA,MAAAC,gBAAA,EAAAf,YAAA,SAAAb,KAAA;IACA;EACA;EACA6B,OAAA,WAAAA,QAAA;IACA,IAAAb,UAAA,QAAAA,UAAA;IAEAA,UAAA;EACA;AACA","ignoreList":[]}]}